{"version":3,"sources":["components/visualization.js","components/visualizationcard.js","components/voronoi.js","components/areabump.js","components/streamgraph.js","App.js","reportWebVitals.js","index.js"],"names":["library","add","fab","fas","far","faLinkedin","faGithub","faChevronUp","useStyles","makeStyles","root","maxWidth","media","height","Visualization","props","scrollUp","bind","document","getElementById","scrollIntoView","behavior","block","Card","className","shadow","style","width","margin","onClick","this","icon","Grid","container","spacing","direction","justify","alignItems","item","xs","visualizationComponent","title","dangerouslySetInnerHTML","__html","description","Component","VisualizationCard","scrollDown","console","log","id","window","isData","data","isProject","dataButton","projectButton","cardLink","CardMedia","display","justifyContent","src","img","alt","Button","colored","class","target","action","type","CardActionArea","CardContent","Typography","gutterBottom","variant","component","align","color","shortDescription","CardActions","link","Voronoi","createVoronoi","drawVoronoi","updateTooltip","state","that","node","size","genreColor","loadedData","map","d","pts","tsneCoordinatesNormalized","xv","extent","yv","delaunay","Delaunay","from","voronoi","svg","select","attr","append","g","renderBounds","renderPoints","colorToggle","corrColor","cs","scaleLinear","domain","interpolate","interpolateRgb","range","rgb","clamp","selectAll","join","i","renderCell","on","similarityMatrix","c","transition","duration","tooltip","label","genres","text","enter","ref","AreaBump","createAreaBump","onMouseMove","drawData","updateBumpTooltip","toggleType","toggleLocation","colors","top","right","bottom","left","x","scaleTime","timeParse","date","xAxis","axisBottom","scale","ticks","timeMonth","call","y","yAxis","axisRight","tickFormat","format","bumpArea","area","curve","curveBasis","formattedDate","y0","y1","blank","setState","prevState","showCases","showGlobal","layers","input","casesState","locationState","dataSelection","total_days","length","flat","sum","place","push","nest","key","location","entries","sort","a","b","values","rank","prepareData","countries","str","hash","charCodeAt","djb2","toString","substr","hashStringToColor","exit","remove","timeStamp","Date","setHours","setMinutes","setSeconds","setMilliseconds","roundDate","invert","mouseX","val","forEach","el","getTime","current","count","pct","day","n","e","nativeEvent","offsetX","buttonTitle","chartTitle","StreamGraph","createStreamGraph","drawScale","drawLegend","parseTime","current_cases","full","nestAndSort","short","l","j","vals","lv","step","Math","round","splice","alphabetic","replace","gradient","offset","fr","fatality_rate","col","populateGradients","zipped","arrays","_","array","zip","country","stackKeys","singleDayMax","recombined","oneDay","dayDict","max","stack","keys","stacker","k","activeWidth","yLog","scaleLog","yLinear","streamArea","curveCardinal","index","logScale","legend","lScale","lAxis","tickSize","deaths","recoveries","recovered","timeFormat","faHardHat","App","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","rel","fontSize","faHammer","tip","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2eda2f21.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Card, Grid, IconButton, makeStyles} from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library, dom } from '@fortawesome/fontawesome-svg-core'\r\nimport { fas,faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\nimport { fab,faLinkedin,faGithub } from '@fortawesome/free-brands-svg-icons'\r\nlibrary.add(fab, fas, far, faLinkedin, faGithub,faChevronUp)\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nclass Visualization extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.scrollUp = this.scrollUp.bind(this);\r\n    }\r\n    scrollUp(){\r\n        document.getElementById(\"project-header\").scrollIntoView({behavior: \"smooth\", block: 'start'});\r\n    }\r\n    render() {\r\n        return(\r\n            <Card className={useStyles.root} shadow={5} style={{width: '100%', margin: 'auto'}}>\r\n                <div style={{'buffer-top':'50px'}}>\r\n                    <button className=\"mdc-icon-button keyboard_arrow_up card-button\"\r\n                            onClick={this.scrollUp}>\r\n                        <FontAwesomeIcon icon={faChevronUp}/>\r\n                    </button>\r\n                </div>\r\n                <Grid container\r\n                      spacing={0}\r\n                      direction=\"row\"\r\n                      justify=\"center\"\r\n                      alignItems=\"center\"\r\n                >\r\n                    <Grid item xs>\r\n                        {this.props.visualizationComponent}\r\n                    </Grid>\r\n                    <Grid item xs style={{'margin':'25px'}}>\r\n                        <h2\r\n                            className=\".viz-div\">{this.props.title}\r\n                        </h2>\r\n                        <div>\r\n                            {/*Note:html allows for links*/}\r\n                            <p dangerouslySetInnerHTML={{__html: this.props.description}} />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Visualization;\r\n","import React, { Component } from 'react';\r\nimport {Card, CardHeader, CardContent, CardActions, Button, IconButton, CardMedia,CardActionArea, Typography, makeStyles, Grid} from '@material-ui/core';\r\n\r\nclass VisualizationCard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.scrollDown = this.scrollDown.bind(this);\r\n    }\r\n\r\n    scrollDown() {\r\n        console.log(\"scrollDown\", this.props.id, window)\r\n        document.getElementById(this.props.id).scrollIntoView({behavior: \"smooth\"});\r\n    }\r\n\r\n    render() {\r\n        const isData = this.props.data;\r\n        const isProject = this.props.id;\r\n\r\n        let dataButton = <div/>;\r\n        let projectButton = <div/>;\r\n        let cardLink =\r\n            <CardMedia\r\n                style={{ display:'flex', justifyContent:'center'}}>\r\n                <img\r\n                    src={this.props.img}\r\n                    alt={this.props.title}\r\n                    style={{'max-height':'200px','max-width':'325px','height':'auto','width':'auto','margin':0,'buffer':0}}\r\n                />\r\n            </CardMedia>\r\n\r\n        if (isProject !== \"None\") {\r\n            projectButton =\r\n                <Button colored onClick={this.scrollDown} class=\"card-button\">\r\n                    <span>Project</span>\r\n                </Button>\r\n\r\n            cardLink =\r\n                <CardMedia\r\n                    onClick={this.scrollDown}\r\n                    style={{ display:'flex', justifyContent:'center'}}>\r\n                    <img\r\n                        src={this.props.img}\r\n                        alt={this.props.title}\r\n                        style={{'max-height':'200px','max-width':'325px','height':'auto','width':'auto','margin':0,'buffer':0}}\r\n                    />\r\n                </CardMedia>\r\n        }\r\n        if (isData !== \"None\") {\r\n            dataButton =\r\n                <form target='_blank' action={`${this.props.data}`}>\r\n                    <Button class=\"card-button\" type='submit'>\r\n                        Data\r\n                    </Button>\r\n                </form>\r\n        }\r\n\r\n\r\n        return (\r\n            <Card shadow={3} style={{'max-width':'325px', margin: 'auto'}}>\r\n                <CardActionArea>\r\n                    {cardLink}\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" align={'center'}>\r\n                            {this.props.title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {this.props.shortDescription}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                    >\r\n                        <Grid item>\r\n                            {projectButton}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <form target='_blank' action={`https://github.com/tom-shanahan/${this.props.link}`}>\r\n                                <Button class=\"card-button\" type='submit'>\r\n                                    Code\r\n                                </Button>\r\n                            </form>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {dataButton}\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\nexport default VisualizationCard;\r\n","import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport { extent } from 'd3-array'\r\nimport { rgb } from 'd3-color'\r\nimport { Delaunay } from \"d3-delaunay\"\r\nimport { interpolateRgb } from 'd3-interpolate'\r\nimport { scaleLinear} from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport { transition } from 'd3-transition'\r\nimport loadedData from '../assets/data/voronoi.json'\r\n\r\nclass Voronoi extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.createVoronoi = this.createVoronoi.bind(this);\r\n    this.drawVoronoi = this.drawVoronoi.bind(this);\r\n    this.updateTooltip = this.updateTooltip.bind(this);\r\n    this.state = {'svg':null\r\n      ,'g':null\r\n      ,'voronoi':null\r\n      ,'pts':null\r\n      ,'genreColor':null\r\n      ,'corrColor':null\r\n      ,'colorToggle':true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.createVoronoi();\r\n    this.drawVoronoi();\r\n  }\r\n  createVoronoi() {\r\n    const that = this;\r\n    const node = this.node;\r\n\r\n    const margin = {top: 75, right: 75, bottom: 75, left: 75};\r\n    const width = this.props.size[0] - margin.left - margin.right;\r\n    const height = this.props.size[1] - margin.top - margin.bottom;\r\n\r\n    that.state.genreColor = loadedData.map(d => d.color);\r\n    that.state.pts = loadedData.map(d => [d.tsneCoordinatesNormalized[0]*height,d.tsneCoordinatesNormalized[1]*width]);\r\n    const xv = extent(that.state.pts.map(d => d[0]));\r\n    const yv = extent(that.state.pts.map(d => d[1]));\r\n    console.log(xv);\r\n\r\n    const delaunay = Delaunay.from(that.state.pts);\r\n    that.state.voronoi = delaunay.voronoi([xv[0],yv[0],xv[1],yv[1]]);\r\n\r\n    that.state.svg = select(node)\r\n         .attr(\"id\",\"voronoi-svg\")\r\n         .attr(\"width\", this.props.size[0])\r\n         .attr(\"height\", this.props.size[1])\r\n         .append(\"g\")\r\n         .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    that.state.g = that.state.svg.append(\"g\")\r\n        .attr(\"id\",\"voronoi-group\");\r\n\r\n    that.state.svg.append(\"path\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"d\", that.state.voronoi.renderBounds());\r\n\r\n    that.state.svg.append(\"path\")\r\n        .attr(\"d\", delaunay.renderPoints(null, 1.5));\r\n  }\r\n  drawVoronoi(){\r\n    const that = this;\r\n    var color = this.state.genreColor;\r\n    if(!this.state.colorToggle) color = this.state.corrColor;\r\n\r\n    const cs = scaleLinear()\r\n       .domain([0,0.25,0.5])\r\n       .interpolate(interpolateRgb)\r\n       .range([rgb('#cc0000'),rgb(249, 247, 174),rgb(0, 104, 55)])\r\n       .clamp(true);\r\n\r\n    this.state.g.selectAll(\"path\")\r\n      .data(this.state.pts)\r\n      .join(\"path\")\r\n      .attr(\"d\", (d, i) => this.state.voronoi.renderCell(i))\r\n      .attr(\"stroke-width\",3)\r\n      .on(\"mouseover\", function(d, i){\r\n        if(that.state.colorToggle){\r\n          select(this)\r\n            .attr(\"fill\",\"lightgray\");\r\n        }else{\r\n          that.state.corrColor = loadedData[i].similarityMatrix.map(c => cs(c));\r\n          that.drawVoronoi();\r\n        }\r\n        that.updateTooltip(loadedData[i]);\r\n      })\r\n      .on(\"mouseout\", function(d,i){\r\n        if(that.state.colorToggle){\r\n          select(this)\r\n            .attr(\"fill\",that.state.genreColor[i]);\r\n          that.state.svg.selectAll(\".voronoi-tooltip\")\r\n            .style(\"visibility\", \"hidden\")\r\n        }\r\n      })\r\n      .on(\"click\", function(d,i){\r\n        that.state.corrColor = loadedData[i].similarityMatrix.map(c => cs(c));\r\n        that.state.colorToggle = !that.state.colorToggle;\r\n        that.drawVoronoi();\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attr(\"fill\", (d, i) => color[i]);\r\n  }\r\n\r\n  updateTooltip(d){\r\n    var tooltip = this.state.svg.selectAll(\".voronoi-tooltip\")\r\n        .data([`${d.label}`,`${d.genres}`]);\r\n    tooltip.style(\"visibility\", \"visible\")\r\n        .attr(\"opacity\",1)\r\n        .text(d => d);\r\n    tooltip.enter()\r\n        .append(\"text\")\r\n        .attr(\"class\", \"voronoi-tooltip\")\r\n        .attr(\"x\",\"0\")\r\n        .attr(\"y\",(d,i) => `${i-2}em`)\r\n        .attr(\"opacity\",1)\r\n        .text(d => d);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <svg\r\n          ref={node => this.node = node}\r\n          width={this.props.size[0]}\r\n          height={this.props.size[1]}>\r\n        </svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Voronoi\r\n","import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport { extent } from 'd3-array'\r\nimport { axisBottom, axisRight } from 'd3-axis'\r\nimport { nest } from 'd3-collection'\r\nimport { format } from 'd3-format'\r\nimport { scaleLinear, scaleTime } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport { area, curveBasis } from 'd3-shape'\r\nimport {timeMonth, timeWeek} from 'd3-time'\r\nimport { timeParse } from 'd3-time-format'\r\nimport { transition } from 'd3-transition'\r\nimport loadedData from '../assets/data/area_bump.json'\r\n\r\nclass AreaBump extends Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.createAreaBump = this.createAreaBump.bind(this);\r\n      this.onMouseMove = this.onMouseMove.bind(this);\r\n      this.drawData = this.drawData.bind(this);\r\n      this.updateBumpTooltip = this.updateBumpTooltip.bind(this);\r\n      this.toggleType = this.toggleType.bind(this);\r\n      this.toggleLocation = this.toggleLocation.bind(this);\r\n      this.state = {\r\n        'svg':null\r\n        ,'margin':null\r\n        ,'x':null\r\n        ,'bumpArea':null\r\n        ,'blank':null\r\n        ,'colors':null\r\n        ,'mouseX':null\r\n        ,'showCases':true\r\n        ,'showGlobal':true\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.createAreaBump();\r\n      this.drawData();\r\n  }\r\n\r\n  createAreaBump() {\r\n    const node = this.node;\r\n    const that = this.state;\r\n    that.colors = {\r\n    \"Korea, South\":\"darkred\"\r\n    ,\"China\":\"pink\"\r\n    ,\"US\":\"blue\"\r\n    ,\"United Kingdom\":\"orange\"\r\n    ,\"France\":\"lightblue\"\r\n    ,\"Germany\":\"yellow\"\r\n    ,\"Italy\":\"tan\"\r\n    ,\"Spain\":\"purple\"\r\n    ,\"Switzerland\":\"violet\"\r\n    ,\"Iran\":\"green\"\r\n    ,\"Netherlands\":\"cyan\"\r\n    ,\"Austria\":\"teal\"\r\n    ,\"Belgium\":\"brown\"\r\n    ,\"All Other\":\"lightgray\"\r\n    ,\"India\":\"orange\"\r\n    };\r\n\r\n    that.margin = {top: 10, right: 75, bottom: 30, left: 20};\r\n    const width = 750 - that.margin.left - that.margin.right;\r\n    const height = 500 - that.margin.top - that.margin.bottom;\r\n\r\n    that.svg = select(node)\r\n      .attr(\"id\",\"bump-svg\")\r\n      .attr(\"width\", width + that.margin.left + that.margin.right)\r\n      .attr(\"height\", height + that.margin.top + that.margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + that.margin.left + \",\" + that.margin.top + \")\");\r\n\r\n    // axis\r\n    that.x = scaleTime()\r\n      .domain(extent(loadedData['confirmed_global'], d => timeParse(\"%m/%d/%y\")(d[0].date)))\r\n      .range([0, width])\r\n      .clamp(true);\r\n\r\n    const xAxis = axisBottom()\r\n      .scale(that.x)\r\n      .ticks(timeMonth);\r\n\r\n    that.svg.append(\"g\")\r\n      .attr(\"class\", \"x-bump axis\")\r\n      .attr(\"transform\", `translate(0,${height-5})`)\r\n      .transition(\"axis\")\r\n      .duration(1000)\r\n      .call(xAxis);\r\n\r\n    const y = scaleLinear()\r\n      .domain([0,1])\r\n      .range([height-10, 0]);\r\n\r\n    const yAxis = axisRight()\r\n      .scale(y)\r\n      .tickFormat(format(\".0%\"));\r\n\r\n    that.svg.append(\"g\")\r\n        .attr(\"class\", \"y-bump axis\")\r\n        .attr(\"transform\", `translate(${width+10}, 0)`)\r\n        .transition(\"axis\")\r\n        .duration(1000)\r\n        .call(yAxis);\r\n\r\n    // clipping paths\r\n    that.svg.append(\"defs\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\",\"clip-bump\")\r\n      .append(\"rect\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height-10)\r\n      .attr(\"x\",0)\r\n      .attr(\"y\",0);\r\n\r\n    that.bumpArea = area()\r\n      .curve(curveBasis)\r\n      .x(d => that.x(d.formattedDate))\r\n      .y0(d => y(d.y0))\r\n      .y1(d => y(d.y0 + d.y));\r\n\r\n    that.blank = area()\r\n      .curve(curveBasis)\r\n      .x(d => that.x(d.formattedDate))\r\n      .y0(d => height-10)\r\n      .y1(d => height-10);\r\n  }\r\n\r\n  toggleType() {\r\n    this.setState((prevState) => {\r\n      return {showCases:!prevState.showCases}\r\n    });\r\n  }\r\n\r\n  toggleLocation() {\r\n    this.setState((prevState) => {\r\n      return {showGlobal:!prevState.showGlobal}\r\n    });\r\n  }\r\n\r\n  drawData() {\r\n    this.toggleType();\r\n    const that = this;\r\n    const layers = prepareData(loadedData,this.state.showCases,this.state.showGlobal);\r\n    var countries = this.state.svg.selectAll(`.areaBumpLayers`)\r\n      .data(layers, d => d.key);\r\n\r\n    countries.transition()\r\n      .duration(1000)\r\n      .attr(\"d\", d => {\r\n        return this.state.bumpArea(d.values);\r\n      });\r\n\r\n    countries.enter()\r\n      .append(\"path\")\r\n      .attr(\"class\", `layer-bump areaBumpLayers`)\r\n      .on(\"mousemove\", d => this.updateBumpTooltip(d))\r\n      .on(\"mouseout\", d => this.state.svg.selectAll(\".bump-tooltip\").style(\"visibility\", \"hidden\"))\r\n      .attr(\"fill\", (d,i) => this.state.colors[d.key] ? this.state.colors[d.key] : hashStringToColor(d.key))\r\n      .attr(\"stroke\",\"black\")\r\n      .attr(\"d\", d => this.state.blank(d.values))\r\n      .transition(\"load\")\r\n      .duration(1000)\r\n      .attr(\"d\", d => {\r\n        return this.state.bumpArea(d.values);\r\n      })\r\n      .attr(\"opacity\", 1);\r\n\r\n    countries.exit()\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"d\", d => this.state.blank(d.values))\r\n      .remove();\r\n\r\n    function prepareData(input,casesState,locationState){\r\n      //find a y and y0 for each data point\r\n      var dataSelection = \"\"\r\n      if(casesState) {\r\n        dataSelection = 'confirmed_'\r\n      }\r\n      else {\r\n        dataSelection = 'deaths_'\r\n      }\r\n      if(locationState) {\r\n        dataSelection += 'global'\r\n      }\r\n      else {\r\n        dataSelection += 'US'\r\n      }\r\n      console.log(dataSelection)\r\n      var data = input[dataSelection]\r\n      var total_days = data.length;\r\n      var flat = [];\r\n      for(var i = 0; i < total_days; i++){\r\n        var sum = 0;\r\n        var padding = 0;\r\n        var place = data[i].length;\r\n        while(place--){\r\n          data[i][place][\"formattedDate\"] = timeParse(\"%m/%d/%y\")(data[i][place][\"date\"]);\r\n          data[i][place][\"y0\"] = sum;\r\n          data[i][place][\"y\"] = data[i][place][\"pct\"];\r\n          flat.push(data[i][place]);\r\n          sum += data[i][place][\"pct\"] + padding;\r\n        }\r\n      }\r\n\r\n      var nester = nest()\r\n        .key(d => d.location);\r\n      var layers = nester.entries(flat);\r\n      layers = layers.sort(\r\n          (a,b) => b.values[b.values.length-1].rank - a.values[a.values.length-1].rank\r\n      );\r\n      return layers;\r\n    }\r\n\r\n    function djb2(str){\r\n      var hash = 5381;\r\n      for (var i = 0; i < str.length; i++) {\r\n        hash = ((hash << 5) + hash) + str.charCodeAt(i); /* hash * 33 + c */\r\n      }\r\n      return hash;\r\n    }\r\n\r\n    function hashStringToColor(str) {\r\n      var hash = djb2(str);\r\n      var r = (hash & 0xFF0000) >> 16;\r\n      var g = (hash & 0x00FF00) >> 8;\r\n      var b = hash & 0x0000FF;\r\n      return \"#\" + (\"0\" + r.toString(16)).substr(-2) + (\"0\" + g.toString(16)).substr(-2) + (\"0\" + b.toString(16)).substr(-2);\r\n    }\r\n  }\r\n\r\n  // generates data when mouse on chart\r\n  updateBumpTooltip(d){\r\n    var date = roundDate(this.state.x.invert(this.state.mouseX - this.state.margin.left));\r\n    var val = d.values[d.values.length-1];\r\n    d.values.forEach(el => {\r\n      if(el.formattedDate.getTime() === date.getTime()){\r\n        val = el;\r\n      }\r\n    })\r\n\r\n    var current = format(\",\")(val.count)\r\n    var pct = format(\".0%\")(val.pct)\r\n    var day = val.date\r\n    var n = d.key;\r\n\r\n    const tooltip = this.state.svg.selectAll(\".bump-tooltip\")\r\n      .data([n,`date: ${day}`,`count: ${current}`,`% of daily global: ${pct}`]);\r\n    tooltip.style(\"visibility\", \"visible\")\r\n      .text(d => d);\r\n    tooltip.enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"bump-tooltip\")\r\n      .attr(\"x\",\"10\")\r\n      .attr(\"y\",(d,i) => `${2+i}em`)\r\n      .attr(\"font-weight\", (d,i) => i === 0 ? \"bold\" : \"normal\")\r\n      .text(d => d);\r\n\r\n    function roundDate(timeStamp){\r\n        var d = new Date(timeStamp);\r\n        d.setHours(0);\r\n        d.setMinutes(0);\r\n        d.setSeconds(0);\r\n        d.setMilliseconds(0);\r\n      return d;\r\n    }\r\n  }\r\n\r\n  // updates data as mouse moved across chart\r\n  onMouseMove(e) {\r\n    this.setState({'mouseX':e.nativeEvent.offsetX});\r\n  }\r\n\r\n  render() {\r\n    let buttonTitle = \"View Fatality Data\";\r\n    let chartTitle = \"Share of Global COVID-19 Cases by Country\";\r\n    if (this.state.showCases) {\r\n      buttonTitle = \"View Case Data\";\r\n      chartTitle = \"Share of Global COVID-19 Deaths by Country\"\r\n    }\r\n\r\n    return (\r\n      <div className= 'viz-container'>\r\n        <p className='viz-title' id='chart-title'>{chartTitle}</p>\r\n        <svg\r\n            onMouseMove={this.onMouseMove}\r\n            ref={node => this.node = node}\r\n            width={this.props.size[0]}\r\n            height={this.props.size[1]}>\r\n        </svg>\r\n        <div className='button-container'>\r\n          <button\r\n              className='card-button chart-toggle'\r\n              onClick={() => {\r\n                this.drawData();\r\n              }}>\r\n            {buttonTitle}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AreaBump\r\n","import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport { extent } from 'd3-array'\r\nimport { axisBottom, axisRight } from 'd3-axis'\r\nimport { nest } from 'd3-collection'\r\nimport { rgb } from 'd3-color'\r\nimport { format } from 'd3-format'\r\nimport { interpolateRgb } from 'd3-interpolate'\r\nimport { scaleLinear, scaleLog, scaleTime } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport { area, curveCardinal, stack } from 'd3-shape'\r\nimport {timeMonth, timeWeek} from 'd3-time'\r\nimport { timeFormat, timeParse } from 'd3-time-format'\r\nimport { transition } from 'd3-transition'\r\nimport loadedData from '../assets/data/StreamChartData.json'\r\n\r\nclass StreamGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.createStreamGraph = this.createStreamGraph.bind(this);\r\n        this.drawScale = this.drawScale.bind(this);\r\n        this.drawLegend = this.drawLegend.bind(this);\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.updateTooltip = this.updateTooltip.bind(this);\r\n        this.state = {'logScale':true\r\n            ,'margin':null\r\n            ,'width':null\r\n            ,'height':null\r\n            ,'svg':null\r\n            ,'yLog':null\r\n            ,'yLinear':null\r\n            ,'yAxis':null\r\n            ,'xAxis':null\r\n            ,'cs':null\r\n            ,'streamArea':null\r\n            ,'mouseX':0\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.createStreamGraph();\r\n        this.drawScale();\r\n        this.drawLegend();\r\n    }\r\n    componentDidUpdate() {\r\n    }\r\n    createStreamGraph() {\r\n        const node = this.node;\r\n        const that = this.state;\r\n\r\n        // Streamgraph starts here\r\n        const margin = {top: 20, right: 50, bottom: 100, left: 30};\r\n        const width = this.props.size[0] - margin.left - margin.right;\r\n        const height = this.props.size[1] - margin.top - margin.bottom;\r\n        that.margin = margin;\r\n        that.height = height;\r\n        that.width = width;\r\n\r\n        that.svg = select(node)\r\n            .attr('id','stream-svg')\r\n            .attr('width', this.props.size[0])\r\n            .attr('height', this.props.size[1])\r\n            .append('g')\r\n            .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n        that.cs = scaleLinear()\r\n            .domain([0,0.5,1])\r\n            .interpolate(interpolateRgb)\r\n            .range([rgb('#cc0000'),rgb('#f9f7ae'),rgb('#006837')]);\r\n\r\n        //prepare data\r\n        const parseTime = timeParse('%m/%d/%y');\r\n        function formatDate (d) {\r\n            d.date = parseTime(d.date);\r\n            d.current_cases = +d.current_cases;\r\n        }\r\n        loadedData.forEach(formatDate);\r\n\r\n        const [layers, singleDayMax] = prepareData(loadedData)\r\n        const yAxisBuffer = singleDayMax.toString().length*6;\r\n        const activeWidth = width - yAxisBuffer;\r\n\r\n        // axis\r\n        that.x = scaleTime()\r\n            .domain(extent(loadedData, d => d.date))\r\n            .range([0, activeWidth])\r\n            .clamp(true);\r\n\r\n        that.xAxis = axisBottom(that.x)\r\n            .ticks(timeMonth);\r\n\r\n        that.svg.append('g')\r\n            .attr('class', 'x axis')\r\n            .attr('transform', `translate(0,${height})`);\r\n\r\n        that.yLog = scaleLog()\r\n            .range([height-10, 0])\r\n            .domain([singleDayMax/200,singleDayMax])\r\n            .clamp(true);\r\n\r\n        that.yLinear = scaleLinear()\r\n            .range([height-10, 0])\r\n            .domain([0,singleDayMax])\r\n            .clamp(true);\r\n\r\n        that.yAxis = axisRight()\r\n            .tickFormat(format(','));\r\n\r\n        that.svg.append('g')\r\n            .attr('class', 'y axis')\r\n            .attr('transform', `translate(${activeWidth + 10}, 0)`);\r\n\r\n        // clipping paths\r\n        that.svg.append('defs')\r\n            .append('clipPath')\r\n            .attr('id', 'clip')\r\n            .append('rect')\r\n            .attr('width', activeWidth)\r\n            .attr('height', height-10)\r\n            .attr('x', 0)\r\n            .attr('y', 0);\r\n\r\n        // Draw the data\r\n        that.streamArea = area()\r\n            .curve(curveCardinal)\r\n            .x(d => that.x(d.data.date));\r\n        const blank = area()\r\n            .curve(curveCardinal)\r\n            .x(d => that.x(d.data.date))\r\n            .y0(that.height-10)\r\n            .y1(that.height-10);\r\n\r\n        var countries = that.svg.selectAll(`.globalData`)\r\n            .data(layers);\r\n\r\n        countries.enter()\r\n            .append('path')\r\n            .attr('class', `layer globalData`)\r\n            .attr('d', d => blank(d))\r\n            .on('mousemove', d => this.updateTooltip(d))\r\n            .on('mouseout', function(d, i) {\r\n                that.svg.selectAll('.stream-tooltip').style('visibility', 'hidden');\r\n            })\r\n            .attr('fill', d => {return `url(#gradient-${d.key.replace(/[^A-Za-z]/g, '')})`})\r\n            .attr('clip-path','url(#clip)')\r\n            .attr('opacity', 1);\r\n\r\n        function prepareData(loadedData){\r\n            var full = nestAndSort(loadedData);\r\n            var short = nestAndSort(loadedData);\r\n\r\n            //remove data\r\n            var l = short.length;\r\n            for(var j = 0; j < l; j++){\r\n                var vals = short[j].values;\r\n                var lv = vals.length;\r\n                var step = Math.round(lv/40);\r\n                while(lv-step > 0){\r\n                    vals.splice(lv-step,step-1)\r\n                    lv -= step;\r\n                }\r\n            }\r\n\r\n            //populate gradients\r\n            populateGradients(full);\r\n\r\n            //order for\r\n            var dailyValues = short.map(country => country.values);\r\n            var zipped = zip(dailyValues);\r\n            var stackKeys = zipped[0].map(country => country.key.replace(/[^A-Za-z]/g, ''));\r\n            var singleDayMax = 0;\r\n\r\n            var recombined = zipped.map(oneDay => {\r\n                var dayDict = {};\r\n                dayDict['date'] = oneDay[0].date;\r\n                var sum = 0;\r\n                oneDay.forEach(country => {\r\n                    sum += country.current_cases;\r\n                    dayDict[country.key.replace(/[^A-Za-z]/g, '')] = country.current_cases;\r\n                })\r\n                singleDayMax = Math.max(singleDayMax,sum);\r\n                return dayDict;\r\n            })\r\n\r\n            var stacker = stack()\r\n                .keys(stackKeys);\r\n            var layers = stacker(recombined);\r\n\r\n            for(var k = 0; k < l; k++){\r\n                layers[k]['d'] = full[k]\r\n            }\r\n\r\n            return [layers, singleDayMax]\r\n        }\r\n        function nestAndSort(data){\r\n            //manipulate data\r\n            var nester = nest()\r\n                .key(d => d.key);\r\n            var alphabetic = nester.entries(data);\r\n            var l = alphabetic.length;\r\n\r\n            //order data\r\n            for(var i = 0; i < l; i++){\r\n                var vals = alphabetic[i].values;\r\n                var lv = vals.length;\r\n                var current = vals[lv-1];\r\n                alphabetic[i].fatality_rate = current.fatality_rate;\r\n                alphabetic[i].current = current.current_cases;\r\n                alphabetic[i].index = i;\r\n            }\r\n            alphabetic.sort((a,b) => (a.current - b.current));\r\n            return alphabetic;\r\n        }\r\n        function populateGradients(alphabetic){\r\n            //add color gradients\r\n            var l = alphabetic.length;\r\n            for(var i = 0; i < l; i++){\r\n                var id = `gradient-${alphabetic[i].key.replace(/[^A-Za-z]/g, '')}`;\r\n                alphabetic[i].gradient = id;\r\n\r\n                var defs = that.svg.append('defs');\r\n\r\n                var gradient = defs.append('linearGradient')\r\n                    .attr('id', id)\r\n                    .attr('x1', '0%')\r\n                    .attr('x2', '100%')\r\n                    .attr('y1', '0%')\r\n                    .attr('y2', '0%');\r\n\r\n                var values = alphabetic[i].values;\r\n                var lv = alphabetic[i].values.length;\r\n\r\n                for(var j = 0; j < lv; j++){\r\n                    var offset = `${Math.round(j*100/(lv-1))}%`;\r\n                    var fr = values[j].fatality_rate/0.1;\r\n                    var col = that.cs(1-fr); //d3.interpolateRdYlGn(1-fr);\r\n\r\n                    gradient.append('stop')\r\n                        .attr('offset', offset)\r\n                        .attr('stop-color', col)\r\n                        .attr('stop-opacity', 1);\r\n                }\r\n            }\r\n        }\r\n        function zip(arrays) {\r\n            return arrays[0].map((_,i) => arrays.map(array => array[i]));\r\n        }\r\n    }\r\n    drawScale(){\r\n        this.setState({'logScale': !this.state.logScale})\r\n        var y = this.state.yLinear;\r\n        if(this.state.logScale) y = this.state.yLog;\r\n        this.state.yAxis.scale(y);\r\n\r\n        this.state.svg.selectAll('.y')\r\n            .transition('axis')\r\n            .duration(1000)\r\n            .call(this.state.yAxis);\r\n\r\n        this.state.svg.selectAll('.x')\r\n            .transition('axis')\r\n            .duration(1000)\r\n            .call(this.state.xAxis);\r\n\r\n        this.state.streamArea.y0(d => y(d[0]+1))\r\n            .y1(d => y(d[1]+1));\r\n\r\n        this.state.svg.selectAll('.layer')\r\n            .transition('axis')\r\n            .duration(1000)\r\n            .attr('d', d => this.state.streamArea(d))\r\n    }\r\n    drawLegend() {\r\n        var defs = this.state.svg.append('defs');\r\n\r\n        var gradient = defs.append('linearGradient')\r\n            .attr('id', 'legend-grad')\r\n            .attr('x1', '0%')\r\n            .attr('x2', '100%')\r\n            .attr('y1', '0%')\r\n            .attr('y2', '0%');\r\n\r\n        for(var i = 0; i <= 10; i++){\r\n            gradient.append('stop')\r\n                .attr('offset', `${i*10}%`)\r\n                .attr('stop-color', this.state.cs(1-i/10)) // d3.interpolateRdYlGn(1-i/10))\r\n                .attr('stop-opacity', 1);\r\n        }\r\n\r\n        var legend = this.state.svg.append('g')\r\n            .attr('id','legend')\r\n            .attr('transform', `translate(${(this.state.width/2)-150},${this.state.height+65})`)\r\n        legend.append('rect')\r\n            .attr('width',300)\r\n            .attr('height',15)\r\n            .attr('fill', 'url(#legend-grad)');\r\n        legend.append('text')\r\n            .attr('font-size','16px')\r\n            .attr(\"x\", 75)\r\n            .attr('width',300)\r\n            .text('Case Fatality Rate');\r\n\r\n        var lScale = scaleLinear()\r\n            .range([0, 300])\r\n            .domain([0.0,0.1]);\r\n\r\n        var lAxis = axisBottom(lScale)\r\n            .tickSize(18,0)\r\n            .tickFormat(format('.1%'));\r\n\r\n        var l2 = this.state.svg.append('g')\r\n            .attr('class', 'legend-axis axis')\r\n            .attr('transform', `translate(${(this.state.width/2)-150},${this.state.height+65})`)\r\n            .call(lAxis);\r\n\r\n        l2.selectAll('path')\r\n            .remove();\r\n    }\r\n    onMouseMove(e) {\r\n        this.setState({'mouseX':e.nativeEvent.offsetX});\r\n    }\r\n    updateTooltip(country) {\r\n        var date = roundDate(this.state.x.invert(this.state.mouseX - this.state.margin.left));\r\n        var val;\r\n        country.d.values.forEach(el => {\r\n            if(el.date.getTime() === date.getTime()){\r\n                val = el;\r\n            }\r\n        })\r\n\r\n        var current = format(',')(val.current_cases);\r\n        var deaths = format(',')(val.deaths);\r\n        var recoveries = format(',')(val.recovered);\r\n        var fatality_rate = format('.1%')(val.fatality_rate);\r\n        var day = timeFormat('%m/%d/%y')(val.date);\r\n        var n = country.d.key;\r\n\r\n        var tooltip = this.state.svg.selectAll('.stream-tooltip')\r\n            .data([n,day,`current cases: ${current}`,`deaths: ${deaths}`,`recoveries: ${recoveries}`,`CFR: ${fatality_rate}`]);\r\n        tooltip.style('visibility', 'visible')\r\n            .attr('opacity',1)\r\n            .text(d => d);\r\n        tooltip.enter()\r\n            .append('text')\r\n            .attr('class', 'stream-tooltip')\r\n            .attr('x','0')\r\n            .attr('y',(d,i) => `${i}em`)\r\n            .attr('font-weight', (d,i) => i === 0 ? 'bold' : 'normal')\r\n            .attr('opacity',1)\r\n            .text(d => d);\r\n\r\n        function roundDate(timeStamp){\r\n            var d = new Date(timeStamp);\r\n            d.setHours(0);\r\n            d.setMinutes(0);\r\n            d.setSeconds(0);\r\n            d.setMilliseconds(0);\r\n            return d;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{'display':'flex', 'alignContent': 'top center'}}>\r\n                    <button\r\n                        className=\"card-button axis-toggle\"\r\n                        onClick={this.drawScale}>\r\n                        Toggle Y-Axis Scale\r\n                    </button>\r\n                </div>\r\n                <svg\r\n                    onMouseMove={this.onMouseMove}\r\n                    ref={node => this.node = node}\r\n                    width={this.props.size[0]}\r\n                    height={this.props.size[1]}>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default StreamGraph\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Visualization from './components/visualization';\r\nimport VisualizationCard from './components/visualizationcard';\r\nimport Voronoi from './components/voronoi';\r\nimport AreaBump from './components/areabump';\r\nimport StreamGraph from './components/streamgraph';\r\nimport './App.css';\r\nimport './css/bootstrap.css'\r\nimport './css/themify-icons.css'\r\nimport './css/style.css'\r\nimport './css/font-awesome.min.css'\r\nimport {Button, CardContent, Grid, Typography} from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library, dom } from '@fortawesome/fontawesome-svg-core'\r\nimport {fas, faChevronUp, faHardHat, faHammer} from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\nimport { fab,faLinkedin,faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nlibrary.add(fab, fas, far, faLinkedin, faGithub,faChevronUp,faHardHat)\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <body>\r\n            <header class=\"header_area\">\r\n                <div class=\"main_menu\">\r\n                    <nav class=\"navbar navbar-expand-lg navbar-light\">\r\n                        <div class=\"container\">\r\n                            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n                                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span class=\"icon-bar\"></span>\r\n                                <span class=\"icon-bar\"></span>\r\n                                <span class=\"icon-bar\"></span>\r\n                            </button>\r\n                            <div class=\"collapse navbar-collapse offset\" id=\"navbarSupportedContent\">\r\n                                <ul class=\"nav navbar-nav menu_nav\">\r\n                                    <li class=\"nav-item active\"><a class=\"nav-link\" href=\"#home\">Home</a></li>\r\n                                    <li class=\"nav-item\"><a class=\"nav-link\" href=\"#about\">About</a></li>\r\n                                    <li class=\"nav-item\"><a class=\"nav-link\" href=\"#project-header\">Projects</a></li>\r\n                                    {/*TODO: add Travels section*/}\r\n                                    {/*<li class=\"nav-item\"><a class=\"nav-link\" href=\"./html/travels.html\">Travels</a></li>*/}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n            {/*// ================ End Header Area =================*/}\r\n\r\n            {/*// ================ Start Home Banner Area =================*/}\r\n            <section id=\"home\" class=\"home_banner_area\">\r\n                <div class=\"banner_inner\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row align-items-center justify-content-between\">\r\n                            <div class=\"col-lg-6\">\r\n                                <div class=\"banner_content\">\r\n                                    <h3>Welcome!</h3>\r\n                                    <h1 class=\"text-uppercase\">I'm Tom Shanahan</h1>\r\n                                    <h5 class=\"text-uppercase\">Tech Enthusiast, Data Nerd, Software Engineer</h5>\r\n                                    <div class=\"s_icons my-5\">\r\n                                        <a href=\"https://www.linkedin.com/in/tshanahan1/\" target='_blank' rel='noopener noreferrer'><i class=\"ti-linkedin\"></i></a>\r\n                                        <a href=\"https://github.com/tom-shanahan\" target='_blank' rel='noopener noreferrer'><i class=\"ti-github\"></i></a>\r\n                                    </div>\r\n                                    <a class=\"link-button\" href=\"#project-header\"><span>See My Work</span></a>\r\n                                    <a class=\"link-button\" href=\"https://drive.google.com/file/d/17fyHKjfr3zuP1BY33Lg3P2mpnJqSOxAw/view?usp=sharing\" target=\"_blank\" rel='noopener noreferrer'><span>See My Resume</span></a>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4\">\r\n                                <div class=\"home_right_img\">\r\n                                    <img class=\"img-fluid headshot-img\"\r\n                                         src={'/images/circle_headshot.png'}\r\n                                         style={{ 'border-radius':'100%' }}\r\n                                         alt=\"\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/*// ================ End Home Banner Area =================*/}\r\n\r\n            {/*// ================ Start About Us Area =================*/}\r\n            <section class=\"about_area section_gap\">\r\n                <span id=\"about\" className=\"anchor\"></span>\r\n                <div class=\"container\">\r\n                    <div  class=\"row justify-content-start align-items-center\">\r\n                        <div class=\"col-lg-5\">\r\n                            <div class=\"home_right_img\">\r\n                                <img class=\"img-fluid headshot-img\"\r\n                                     src={'/images/other_photo.JPG'}\r\n                                     alt=\"avatar\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"offset-lg-1 col-lg-5\">\r\n                            <div class=\"main_title text-left\">\r\n                                <p class=\"top_text\">About me <span></span></p>\r\n                                <p>\r\n                                    I am a data-focused software engineer with a background in government,\r\n                                    finance, and consulting. I have nearly 10 years of experience wrangling\r\n                                    and gleaning insights from large, complex datasets. I have experience with\r\n                                    data visualization, web development, and data science.\r\n                                </p>\r\n                                <p>\r\n                                    I recently completed a Masters in Computer Science at Cornell Tech,\r\n                                    focused on the intersection of data and engineering. I studied Algorithms,\r\n                                    Machine Learning, Data Science, and Distributed. I’m experienced working\r\n                                    with Python, JavaScript, React, HTML, SQL, Scikit-Learn, Pandas, NumPy,\r\n                                    Spark, Tableau, and more.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/*// ================ End About Us Area =================*/}\r\n\r\n            {/*// ================ Start Features Area =================*/}\r\n            <section class=\"services_area section_gap\">\r\n                <span id=\"project-header\" className=\"anchor\" ></span>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12\">\r\n                            <div class=\"main_title\">\r\n                                <p class=\"top_text\">Projects <span></span></p>\r\n                                <h2> Things that <br></br>I have built </h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Grid\r\n                        container=\"True\"\r\n                        display=\"flex\"\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={3}\r\n                    >\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <VisualizationCard\r\n                                title=\"Voronoi Diagram\"\r\n                                id=\"voronoi-div\"\r\n                                img='/images/tv_corr.PNG'\r\n                                link=\"tom-shanahan.github.io/blob/master/src/components/voronoi.js\"\r\n                                data=\"https://colab.research.google.com/drive/1JNnXVkwvR1CrOsiIdwod2ZwVKtGYaWqt?usp=sharing\"\r\n                                shortDescription=\"Exploring a television recommendation engine using a dynamic Voronoi diagram. Facilitates the understanding of complex multi-dimensional data.\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <VisualizationCard\r\n                                title=\"Stream Graph\"\r\n                                id=\"stream-div\"\r\n                                img='/images/stream.png'\r\n                                link=\"tom-shanahan.github.io/blob/master/src/components/streamgraph.js\"\r\n                                data=\"https://colab.research.google.com/drive/1lRCAhOrRBCW8YIJZ4jkjv4A4K1JK5m2s?usp=sharing\"\r\n                                shortDescription=\"Tracking country-level COVID-19 cases and fatality rate over time. Toggleable axis improves useability.\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <VisualizationCard\r\n                                title=\"Area Bump Chart\"\r\n                                id=\"bump-div\"\r\n                                img='/images/bump.png'\r\n                                link=\"tom-shanahan.github.io/blob/master/src/components/areabump.js\"\r\n                                data='https://colab.research.google.com/drive/1BYTmrtlquchTl7eTeBpWeYPnctlUDsjg?usp=sharing'\r\n                                shortDescription=\"Tracking global share of COVID-19 cases and fatalities by country. Toggle allows easy switching between datasets.\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <VisualizationCard\r\n                                title=\"Machine Learning\"\r\n                                id=\"None\"\r\n                                img='/images/machine_learning.png'\r\n                                link=\"Machine-Learning-Projects\"\r\n                                data=\"None\"\r\n                                shortDescription=\"Collection of machine learning projects utilizing Pandas, NumPy, Scikit-Learn, and more.\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <VisualizationCard\r\n                                title=\"MapReduce Implementation\"\r\n                                id=\"None\"\r\n                                img='/images/mapReduce.png'\r\n                                link=\"MapReduce-Implementation\"\r\n                                data='None'\r\n                                shortDescription=\"Hadoop-like MapReduce implementation for operations over large datasets. Fault tolerant implementation successfully and rapidly processed hundreds of files with billions of records.\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <br/><br/><br/><br/><br/>\r\n                            <div style={{color:\"darkslateblue\",fontSize:'40px',display:'flex','justify-content':'center'}}>\r\n                                <FontAwesomeIcon style={{margin:'5px'}} icon={faHardHat}/>\r\n                                <FontAwesomeIcon style={{margin:'5px'}} icon={faHammer}/>\r\n                            </div>\r\n                            <br/>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" align={'center'}>\r\n                                And More in Progress!\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </section>\r\n\r\n            <section id=\"projects\" className=\"services_area section_gap\">\r\n                <div className=\"container\">\r\n                    <div id=\"voronoi-div\" className=\"row project-detail\" >\r\n                        <Visualization\r\n                            title=\"Voronoi Diagram\"\r\n                            visualizationComponent=<Voronoi size={[500,500]}/>\r\n                        description=\r\n                        \"This graphic is part of a project I did on the preferences of television viewers. Utilizing over five\r\n                        million viewer data points, I developed two recommendation engines: one based on viewer similarity;\r\n                        the other based on show similarity. While performing this analysis, I wanted to create a visualization\r\n                        to clearly convey the relationships in the high dimensional show-show correlation matrix. I used\r\n                        dimensionality reduction to translate the n-dimensional correlation matrix into a 2D representation.\r\n                        To achieve this I used <a href='https://colah.github.io/posts/2014-10-Visualizing-MNIST/' target='_blank' rel='noopener noreferrer'>\r\n                        t-SNE </a>.\r\n                        <br><br>\r\n                            In the visualization, television shows are represented as dots, and their proximities\r\n                            indicate similarity of user preference. However dimensionality reduction is imperfect and results in information loss.\r\n                            The coloration is a Voronoi diagram which shows the correlations between shows. Shows which are greener have more\r\n                            similar user preference. Interestingly, this coloration allows us to see where dimensionality reduction has maintained\r\n                            relative relations and where it has disrupted these.\r\n                            <br><br>\r\n                                <strong><i>Click on chart</i> to toggle between genres and correlations. <i>Hover</i> to see show title and genre.</strong>\"\r\n                                />\r\n                    </div>\r\n                    <div id=\"stream-div\" className=\"row project-detail\">\r\n                        <Visualization\r\n                            // TODO: Update recovered data\r\n                            title=\"Ordered Stream Graph\"\r\n                            tip=\"Toggle between logarithmic and linear y-axis scales, hover over the graph for country and date specific information\"\r\n                            visualizationComponent=<StreamGraph size={[500,500]}/>\r\n                        description=\r\n                        \"When first confronted with the COVID-19 outbreak, one of my first reactions was to seek out and\r\n                        dig into data about the pandemic. Much of this early data was confused and contradictory. However,\r\n                        gradually a clearly picture emerged of the scale and scope of COVID-19.\r\n                        <br><br>\r\n                            The accompanying visualization shows the path of COVID-19. The chart plots current cases\r\n                            (confirmed but not recovered or deceased) by country. The coloration of each country band\r\n                            represents the case fatality rate (CFR). Early in the pandemic testing of rare and often only\r\n                            serious cases were tested, resulting in an elevated CFR. As testing became more\r\n                            prevalent, the CFR declined.\"\r\n                            />\r\n                    </div>\r\n                    <div id=\"bump-div\" className=\"row project-detail\">\r\n                        <Visualization\r\n                            style = {{display: 'flex',  justifyContent:'center', alignItems:'center'}}\r\n                            title=\"Area Bump Chart\"\r\n                            visualizationComponent=<AreaBump size={[500,500]}/>\r\n                        description=\r\n                        \"This visualization shows the changing geographic patterns of the COVID-19 pandemic. It\r\n                        plots cumulative cases and fatalities as a share of the global total. The top ten countries\r\n                        are broken out, with the remainder aggregated into the 'All Other' category. The stacking\r\n                        of countries shows their relative counts, with the larger appearing on top.\r\n                        <br><br>\r\n                            <strong><i>Use buttons</i> below plot to toggle cases and fatalities. <i>Hover</i> to see country info.</strong>\"\r\n                            />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/*// ================ End Features Area =================*/}\r\n\r\n\r\n            {/*// ================Footer Area =================*/}\r\n            <footer class=\"footer_area\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-lg-12\">\r\n                            <div class=\"footer_top flex-column\">\r\n                                <div class=\"footer_logo\">\r\n                                    <div class=\"d-lg-block d-none\">\r\n                                        <nav class=\"navbar navbar-expand-lg navbar-light justify-content-center\">\r\n                                            <div class=\"collapse navbar-collapse offset\">\r\n                                                <ul class=\"nav navbar-nav menu_nav mx-auto\">\r\n                                                    <li class=\"nav-item\"><a class=\"nav-link text-white\" href=\"#home\">Home</a></li>\r\n                                                    <li class=\"nav-item\"><a class=\"nav-link text-white\" href=\"#about\">About</a></li>\r\n                                                    <li class=\"nav-item\"><a class=\"nav-link text-white\" href=\"#project-header\">Projects </a></li>\r\n                                                    {/*TODO: add Travels section*/}\r\n                                                    {/*<li class=\"nav-item\"><a class=\"nav-link text-white\" href=\"../html/travels.html\">Travels</a></li>*/}\r\n                                                </ul>\r\n                                            </div>\r\n                                        </nav>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"footer_s mt-lg-0 mt-4\">\r\n                                    <a href=\"https://www.linkedin.com/in/tshanahan1/\" target='_blank' rel='noopener noreferrer'><FontAwesomeIcon icon={faLinkedin}/></a>\r\n                                    <a href=\"https://github.com/tom-shanahan\" target='_blank' rel='noopener noreferrer'><FontAwesomeIcon icon={faGithub} /></a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row justify-content-center\">\r\n                        <p style={{color:\"white\"}}>Made with React, D3, and Github Pages</p>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n            {/*// ================End Footer Area =================*/}\r\n            </body>\r\n    );\r\n    }\r\n    }\r\n\r\n    export default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}