{"version":3,"sources":["components/Footer.js","components/ScrollToTop.js","components/HomePage.js","components/AboutPage.js","components/ProjectCard.js","components/ProjectsPage.js","components/ProjectVisualizationMaster.js","components/D3_graphs/AreaBumpGraph.js","components/project_pages/CovidAreaBumpPage.js","components/D3_graphs/StreamGraph.js","components/project_pages/CovidStreamPage.js","components/D3_graphs/VoronoiGraph.js","components/project_pages/TVVoronoiPage.js","components/ProjectDescriptionMaster.js","components/project_pages/FacialRecognitionPage.js","components/project_pages/MapReducePage.js","components/project_pages/DigitRecognizerPage.js","components/project_pages/ForestImagePage.js","components/project_pages/RecommendEnginePage.js","components/project_pages/TripOriginPage.js","components/ContactPage.js","components/Navigation.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","href","target","rel","icon","faLinkedin","faGithub","to","faEnvelope","ScrollToTop","prevProps","this","props","location","window","scrollTo","children","React","Component","withRouter","HomePage","data-aos","src","style","alt","AOS","init","duration","AboutPage","fontSize","ProjectCard","dataButton","data_link","action","Button","class","type","codeButton","projectButtonName","code_link","Card","shadow","margin","height","CardActionArea","pathname","project_page","CardMedia","display","justifyContent","img","title","CardContent","Typography","gutterBottom","variant","component","align","color","shortDescription","tools","CardActions","Grid","container","direction","justify","item","colored","ProjectsPage","marginTop","marginBottom","alignItems","spacing","xs","faHardHat","faHammer","library","add","fab","fas","far","faChevronUp","faChevronLeft","faChevronRight","useStyles","makeStyles","root","maxWidth","media","ProjectVisualizationMaster","width","next_page","prev_page","visualizationComponent","Math","min","innerWidth","innerHeight","dangerouslySetInnerHTML","__html","visualizationNotes","description","AreaBump","createAreaBump","bind","onMouseMove","drawData","updateBumpTooltip","toggleType","toggleLocation","state","node","that","colors","marginRight","top","right","bottom","left","size","svg","select","attr","append","x","scaleTime","domain","extent","loadedData","d","timeParse","date","range","clamp","xAxis","axisBottom","scale","ticks","timeMonth","tickFormat","timeFormat","transition","call","y","scaleLinear","yAxis","axisRight","format","bumpArea","area","curve","curveBasis","formattedDate","y0","y1","blank","setState","prevState","showCases","showGlobal","layers","input","casesState","locationState","dataSelection","console","log","data","total_days","length","flat","i","sum","place","push","nest","key","entries","sort","a","b","values","rank","prepareData","countries","selectAll","enter","on","str","hash","charCodeAt","djb2","g","toString","substr","hashStringToColor","exit","remove","timeStamp","Date","setHours","setMinutes","setSeconds","setMilliseconds","roundDate","invert","mouseX","val","forEach","el","getTime","current","count","pct","day","n","tooltip","text","e","nativeEvent","offsetX","buttonTitle","chartTitle","id","ref","onClick","AreaBumpPage","StreamGraph","createStreamGraph","drawScale","drawLegend","updateTooltip","cs","interpolate","interpolateRgb","rgb","parseTime","current_cases","full","nestAndSort","short","l","j","vals","lv","step","round","splice","alphabetic","replace","gradient","offset","fr","fatality_rate","col","populateGradients","zipped","arrays","map","_","array","zip","country","stackKeys","singleDayMax","recombined","oneDay","dayDict","max","stack","keys","stacker","k","activeWidth","yLog","scaleLog","yLinear","streamArea","curveCardinal","index","logScale","legend","lScale","lAxis","tickSize","deaths","recoveries","recovered","StreamGraphPage","tip","VoronoiGraph","createVoronoi","drawVoronoi","sideDimension","genreColor","pts","tsneCoordinatesNormalized","xv","yv","delaunay","Delaunay","from","voronoi","renderBounds","renderPoints","colorToggle","corrColor","join","renderCell","similarityMatrix","c","label","genres","TVVoronoiPage","ProjectDescriptionMaster","html_frame","html_location","FacialRecogPage","MapReducePage","DigitRecogPage","ForestImagePage","RecommendEnginePage","TripOrigin","ContactPage","Form","method","Group","controlId","Label","Control","name","placeholder","required","as","Navigation","exact","path","TripOriginPage","open","Header","Navbar","expand","Toggle","Collapse","Nav","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39994416.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faGithub, faLinkedin} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faEnvelope} from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\n\r\nfunction Footer(){\r\n    return (\r\n        <footer className=\"footer_area\">\r\n            <div className=\"footer_s mb-4 mt-4\">\r\n                <a href=\"https://www.linkedin.com/in/tshanahan1/\" target='_blank' rel='noopener noreferrer'><FontAwesomeIcon icon={faLinkedin}/></a>\r\n                <a href=\"https://github.com/tom-shanahan\" target='_blank' rel='noopener noreferrer'><FontAwesomeIcon icon={faGithub} /></a>\r\n                <Link to='/contact'><FontAwesomeIcon icon={faEnvelope} /></Link>\r\n            </div>\r\n            <div className='footer_s mb-4 mt-4'>\r\n                <p className='text-white'>Created with React & Github Pages</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\nexport default withRouter(ScrollToTop)\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport '../css/bootstrap.css'\r\nimport '../css/themify-icons.css'\r\nimport '../css/style.css'\r\n\r\nimport AOS from \"aos\";\r\n\r\nfunction HomePage(){\r\n    return (\r\n        <div className=\"vertical-center home_banner_area\" data-aos=\"fade-up\">\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center justify-content-between\">\r\n                    <div className=\"col-lg-6\">\r\n                        <div className=\"banner_content\">\r\n                            <h3>Welcome!</h3>\r\n                            <h1 className=\"text-uppercase\">I'm Tom Shanahan</h1>\r\n                            <h5 className=\"text-uppercase\">Tech Enthusiast, Data Nerd, Software Engineer</h5>\r\n                            <div className=\"s_icons my-5\">\r\n                                <a href=\"https://www.linkedin.com/in/tshanahan1/\" target='_blank' rel='noopener noreferrer'><i className=\"ti-linkedin\"></i></a>\r\n                                <a href=\"https://github.com/tom-shanahan\" target='_blank' rel='noopener noreferrer'><i className=\"ti-github\"></i></a>\r\n                            </div>\r\n                            <Link className='link-button' to='/projects'><span>See My Work</span></Link>\r\n                            <a className=\"link-button\" href=\"https://drive.google.com/file/d/17fyHKjfr3zuP1BY33Lg3P2mpnJqSOxAw/view?usp=sharing\" target=\"_blank\" rel='noopener noreferrer'><span>See My Resume</span></a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                        <div className=\"home_right_img\">\r\n                            <img className=\"img-fluid headshot-img\"\r\n                                 src={'/images/circle_headshot.png'}\r\n                                 style={{ 'border-radius':'100%' }}\r\n                                 alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n\r\nAOS.init({\r\n    duration: 600\r\n});\r\n","import React from \"react\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nfunction AboutPage() {\r\n    return (\r\n        <div className=\"vertical-center\">\r\n            {/*<span id=\"about\" className=\"anchor\"></span>*/}\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-start align-items-center\">\r\n                    <div className=\"col-lg-5\">\r\n                        <div className=\"home_right_img\">\r\n                            <img className=\"img-fluid headshot-img\"\r\n                                 src={'/images/other_photo.JPG'}\r\n                                 alt=\"avatar\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"offset-lg-1 col-lg-5\">\r\n                        <div className=\"main_title text-left\">\r\n                            <p className=\"top_text\">About me <span></span></p>\r\n                            <p style={{fontSize:16}}>\r\n                                I am a data-focused software engineer with a background in government,\r\n                                finance, and consulting. I have nearly 10 years of experience wrangling\r\n                                and gleaning insights from large, complex datasets. I have experience with\r\n                                data visualization, web development, and data science.\r\n                            </p>\r\n                            <p style={{fontSize:16}}>\r\n                                I recently completed a Masters in Computer Science at Cornell Tech,\r\n                                focused on the intersection of data and engineering. I studied Algorithms,\r\n                                Machine Learning, Data Science, and Distributed. I’m experienced working\r\n                                with Python, JavaScript, React, HTML, SQL, Scikit-Learn, Pandas, NumPy,\r\n                                Spark, Tableau, and more.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutPage;\r\n\r\nAOS.init({\r\n    duration: 600\r\n});\r\n","import React, { Component } from 'react';\r\nimport {Card, CardContent, CardActions, Button, CardMedia,CardActionArea, Typography, Grid} from '@material-ui/core';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class ProjectCard extends Component {\r\n    render() {\r\n        let dataButton = <div/>;\r\n        if (this.props.data_link !== \"None\") {\r\n            dataButton =\r\n                <form target='_blank' action={`${this.props.data_link}`}>\r\n                    <Button class=\"card-button\" type='submit'>\r\n                        Data\r\n                    </Button>\r\n                </form>\r\n        }\r\n\r\n        let codeButton = <div/>;\r\n        let projectButtonName = \"Project/Code\";\r\n        if (this.props.code_link !== \"None\") {\r\n            codeButton =\r\n                <form target='_blank' action={`https://github.com/tom-shanahan/${this.props.code_link}`}>\r\n                    <Button class=\"card-button\" type='submit'>\r\n                        Code\r\n                    </Button>\r\n                </form>\r\n            projectButtonName = \"Project\"\r\n        }\r\n\r\n        return (\r\n            <Card shadow={3} style={{'max-width':'325px', margin: 'auto', height:'510px'}}>\r\n                <CardActionArea>\r\n                    <Link to={{pathname: this.props.project_page}}>\r\n                        <CardMedia\r\n                            style={{ display:'flex', justifyContent:'center'}}>\r\n                            <img\r\n                                src={this.props.img}\r\n                                alt={this.props.title}\r\n                                style={{'max-height':'200px','max-width':'325px','height':'auto','width':'auto','margin':0,'buffer':0}}\r\n                            />\r\n                        </CardMedia>\r\n                    </Link>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" align={'center'}>\r\n                            {this.props.title}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {this.props.shortDescription}\r\n                        </Typography>\r\n                        <p className=\"half-line\"></p>\r\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\" align={'center'}>\r\n                            Created with {this.props.tools}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                    >\r\n                        <Grid item>\r\n                            <Link to={{pathname: this.props.project_page}}>\r\n                                <Button colored class=\"card-button\">\r\n                                    <span>{projectButtonName}</span>\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {codeButton}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {dataButton}\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import {Card, Grid, Typography} from \"@material-ui/core\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faHammer, faHardHat} from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\nimport AOS from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nfunction ProjectsPage(){\r\n    return (\r\n        <div className=\"vertical-center\" style={{marginTop:'40px',marginBottom:'40px'}}>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-start align-items-center\">\r\n                    <div className=\"col-lg-12\">\r\n                        <div className=\"main_title\">\r\n                            <p className=\"top_text\">Projects <span></span></p>\r\n                            <h2> Things that <br></br>I have built </h2>\r\n                        </div>\r\n                    </div>\r\n                    <Grid\r\n                        container=\"True\"\r\n                        display=\"flex\"\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"stretch\"\r\n                        spacing={3}\r\n                    >\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"Geodata Analysis: Calculating Trip Counts\"\r\n                                project_page=\"trip_origin\"\r\n                                img='/images/trip_origins.png'\r\n                                tools=\"Python, Pandas, & Geopandas\"\r\n                                code_link=\"None\"\r\n                                data_link=\"None\"\r\n                                shortDescription=\"\r\n                                This project estimates the number of trips originating from a geographic\r\n                                catchment area. Utilizing Census Tract level data, I found the intersection\r\n                                of various shape and used the geographies of these new shapes, to approximate counts.\r\n                                \"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"Multi-Inbox Checker: Extension for Chrome\"\r\n                                project_page=\"chrome_extension\"\r\n                                img='/images/chrome_extension.png'\r\n                                tools=\"Javascript & HTML\"\r\n                                code_link=\"Multi-Inbox-Checker\"\r\n                                data_link=\"None\"\r\n                                shortDescription=\"\r\n                                I created this Chrome Extension to manage multiple Gmail accounts.\r\n                                Existing Extensions didn't satisfy my need for a simple tool\r\n                                to display unread email counts for both my work and personal accounts.\r\n                                This will toggle count badges at a user-selected interval.\r\n                                \"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"Coloration: React App for Choosing Colors\"\r\n                                project_page=\"coloration\"\r\n                                img='/images/coloration.png'\r\n                                tools=\"React, Javascript, & HTML\"\r\n                                code_link=\"coloration\"\r\n                                data_link=\"None\"\r\n                                shortDescription=\"\r\n                                I created this React app to help with choosing colors. As someone with red-green color blindness,\r\n                                I often find it challenging pairing colors. This tool makes use of color theory to suggest groups\r\n                                of colors that pair well with user-selected colors.\r\n                                \"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"Approximating Images with Random Forests\"\r\n                                project_page=\"forest_image\"\r\n                                img='/images/forest_image.png'\r\n                                tools=\"Python, Pandas, Matplotlib, Numpy, & Scikit-learn\"\r\n                                code_link=\"None\"\r\n                                data_link=\"None\"\r\n                                shortDescription=\"\r\n                                This project uses random forest regression to approximate an image based on a small\r\n                                subset set of the image's pixels. The function &quot;learns&quot; what images &quot;should&quot;\r\n                                look like based on a training set of images.\r\n                                \"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"Visualizing Correlations with Interactive Graph\"\r\n                                project_page=\"/tv_voronoi\"\r\n                                img='/images/tv_corr.PNG'\r\n                                tools=\"React & D3.js\"\r\n                                code_link=\"tom-shanahan.github.io/blob/master/src/components/D3_graphs/VoronoiGraph.js\"\r\n                                data_link=\"https://colab.research.google.com/drive/1JNnXVkwvR1CrOsiIdwod2ZwVKtGYaWqt?usp=sharing\"\r\n                                shortDescription=\"Exploring a television show recommendation engine using a dynamic Voronoi Graph.\r\n                                Visualizing complex, high-dimensional data can often be challenging. This graphic helps bring to\r\n                                life the many correlations between individual shows viewership. \"\r\n                            />\r\n                        </Grid>\r\n                        {/*<Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">*/}\r\n                        {/*    <ProjectCard*/}\r\n                        {/*        title=\"Visualizing Data with Stream Graph\"*/}\r\n                        {/*        project_page=\"stream_graph\"*/}\r\n                        {/*        img='/images/stream.png'*/}\r\n                        {/*        tools=\"React & D3.js\"*/}\r\n                        {/*        code_link=\"tom-shanahan.github.io/blob/master/src/components/D3_graphs/StreamGraph.js\"*/}\r\n                        {/*        data_link=\"https://colab.research.google.com/drive/1lRCAhOrRBCW8YIJZ4jkjv4A4K1JK5m2s?usp=sharing\"*/}\r\n                        {/*        shortDescription=\"*/}\r\n                        {/*        This dynamic graphic utilizes the D3.js library to track country-level COVID-19 cases and fatality rates over time.*/}\r\n                        {/*        The visualization allows for user interaction to explore and understand the data.*/}\r\n                        {/*        \"*/}\r\n                        {/*    />*/}\r\n                        {/*</Grid>*/}\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"Recognizing Faces with SVD\"\r\n                                project_page=\"facial_recog\"\r\n                                img='/images/facial_recog.png'\r\n                                tools=\"Python, Numpy, Scikit-learn, SciPy, & Matplotlib\"\r\n                                code_link=\"None\"\r\n                                data_link=\"None\"\r\n                                shortDescription=\"\r\n                                This project utilized the Eigenface method for recognizing human faces. Eigenfaces utilize\r\n                                the power of the Singular Value Decomposition to more efficiently represent high dimensional\r\n                                face images.\r\n                                \"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"Recognizing Digits with K-NN\"\r\n                                project_page=\"digit_recog\"\r\n                                img='/images/digit_recog.png'\r\n                                tools=\"Python, Pandas, Matplotlib, Numpy, & Scikit-learn\"\r\n                                code_link=\"None\"\r\n                                data_link=\"None\"\r\n                                shortDescription=\"\r\n                                This project used a k-nearest neighbors algorithm to classify digits. Utilizing 3-fold cross-validation, I achieved an accuracy of 97%. To evaluate my results, I used an ROC curve and confusion matrix.\r\n                                \"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"Visualizing Data with Area Bump Chart\"\r\n                                project_page=\"area_bump\"\r\n                                img='/images/bump.png'\r\n                                tools=\"React & D3.js\"\r\n                                code_link=\"tom-shanahan.github.io/blob/master/src/components/D3_graphs/AreaBumpGraph.js\"\r\n                                data_link='https://colab.research.google.com/drive/1BYTmrtlquchTl7eTeBpWeYPnctlUDsjg?usp=sharing'\r\n                                shortDescription=\"\r\n                                This dynamic graphic utilizes the JavaScript D3.js library to track the global share of COVID-19 cases and fatalities by country.\r\n                                The visualization allows user to interaction with and toggle the data facilitating exploration and understanding.\r\n                                \"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"Parallel Computing with MapReduce\"\r\n                                project_page=\"/map_reduce\"\r\n                                img='/images/mapReduce.png'\r\n                                tools=\"C/C++\"\r\n                                code_link=\"MapReduce-Implementation\"\r\n                                data_link='None'\r\n                                shortDescription=\"\r\n                                This Hadoop-like implementation of MapReduce can perform word counting and numerical\r\n                                sorting for large datasets efficiently and with fault tolerance. It was able to successfully and\r\n                                rapidly process hundreds of files with billions of records.\r\n                                \"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <ProjectCard\r\n                                title=\"TV Show Recommendation Engine\"\r\n                                project_page=\"recommendation_engine\"\r\n                                img='/images/machine_learning.png'\r\n                                tools=\"Python, Pandas, Matplotlib, Numpy, SciPy, & Scikit-learn\"\r\n                                code_link=\"None\"\r\n                                data_link=\"None\"\r\n                                shortDescription=\"\r\n                                This project utilizes collaborative filtering to create user-user and show-show recommendation\r\n                                engines for television shows.\r\n                                \"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs className=\"col-lg-4 col-md-6 mb-4 mb-lg-0\">\r\n                            <Card shadow={3} style={{'max-width':'325px', margin: 'auto', height:'510px'}}>\r\n                                <br/><br/><br/><br/><br/><br/><br/>\r\n                                <div style={{color:\"darkslateblue\",fontSize:'40px',display:'flex','justify-content':'center'}}>\r\n                                    <FontAwesomeIcon style={{margin:'5px'}} icon={faHardHat}/>\r\n                                    <FontAwesomeIcon style={{margin:'5px'}} icon={faHammer}/>\r\n                                </div>\r\n                                <br/>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" align={'center'}>\r\n                                    And More in Progress!\r\n                                </Typography>\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ProjectsPage;\r\n\r\nAOS.init({\r\n    duration: 600\r\n});\r\n","import React, { Component } from 'react';\r\nimport { Card, Grid, makeStyles } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fas,faChevronUp,faChevronLeft,faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\nimport { fab,faLinkedin,faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport {Link} from \"react-router-dom\";\r\nimport AOS from \"aos\";\r\nlibrary.add(fab, fas, far, faLinkedin, faGithub,faChevronUp,faChevronLeft,faChevronRight)\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nexport default class ProjectVisualizationMaster extends Component {\r\n    render() {\r\n        return(\r\n            <div className='project-description'>\r\n\r\n                <Card className={useStyles.root} shadow={5} style={{width: '100%', margin: 'auto'}} data-aos=\"zoom-in\">\r\n                    <div style={{'buffer-top':'50px'}}>\r\n                        <Link to={this.props.next_page}>\r\n                            <button className=\"mdc-icon-button keyboard_arrow_up card-button\">\r\n                                <FontAwesomeIcon icon={faChevronRight}/>\r\n                            </button>\r\n                        </Link>\r\n\r\n                        <Link to={{pathname: '/projects'}}>\r\n                            <button className=\"mdc-icon-button keyboard_arrow_up card-button\">\r\n                                <FontAwesomeIcon icon={faChevronUp}/>\r\n                            </button>\r\n                        </Link>\r\n\r\n                        <Link to={this.props.prev_page}>\r\n                            <button className=\"mdc-icon-button keyboard_arrow_up card-button\">\r\n                                <FontAwesomeIcon icon={faChevronLeft}/>\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <div className='horizontal-center'>\r\n                                {this.props.visualizationComponent}\r\n                            </div>\r\n                            <div className='horizontal-center'>\r\n                                <p style={{'width':Math.min(window.innerWidth * 0.75,window.innerHeight * 0.55)}} dangerouslySetInnerHTML={{__html: this.props.visualizationNotes}} />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs style={{'margin':'3vh'}}>\r\n                            <h2>\r\n                                {this.props.title}\r\n                            </h2>\r\n                            <b>\r\n                                Created with {this.props.tools}\r\n                            </b>\r\n                            <div>\r\n                                {/*Note:html allows for links*/}\r\n                                <p dangerouslySetInnerHTML={{__html: this.props.description}} />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAOS.init({\r\n    duration: 600\r\n});\r\n","import React, { Component } from 'react'\r\nimport '../../App.css'\r\nimport { extent } from 'd3-array'\r\nimport { axisBottom, axisRight } from 'd3-axis'\r\nimport { nest } from 'd3-collection'\r\nimport { format } from 'd3-format'\r\nimport { scaleLinear, scaleTime } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport { area, curveBasis } from 'd3-shape'\r\nimport { timeMonth, timeYear } from 'd3-time'\r\nimport {timeFormat, timeParse} from 'd3-time-format'\r\nimport { transition } from 'd3-transition'\r\nimport loadedData from '../../assets/data/area_bump.json'\r\n// TODO: switch data load to api call\r\n\r\nexport default class AreaBump extends Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.createAreaBump = this.createAreaBump.bind(this);\r\n      this.onMouseMove = this.onMouseMove.bind(this);\r\n      this.drawData = this.drawData.bind(this);\r\n      this.updateBumpTooltip = this.updateBumpTooltip.bind(this);\r\n      this.toggleType = this.toggleType.bind(this);\r\n      this.toggleLocation = this.toggleLocation.bind(this);\r\n      this.state = {\r\n        'svg':null\r\n        ,'margin':null\r\n        ,'x':null\r\n        ,'bumpArea':null\r\n        ,'blank':null\r\n        ,'colors':null\r\n        ,'mouseX':null\r\n        ,'showCases':true\r\n        ,'showGlobal':true\r\n      };\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.createAreaBump();\r\n      this.drawData();\r\n  }\r\n\r\n  createAreaBump() {\r\n    const node = this.node;\r\n    const that = this.state;\r\n    that.colors = {\r\n    \"Korea, South\":\"darkred\"\r\n    ,\"China\":\"pink\"\r\n    ,\"US\":\"blue\"\r\n    ,\"United Kingdom\":\"orange\"\r\n    ,\"France\":\"lightblue\"\r\n    ,\"Germany\":\"yellow\"\r\n    ,\"Italy\":\"tan\"\r\n    ,\"Spain\":\"purple\"\r\n    ,\"Switzerland\":\"violet\"\r\n    ,\"Iran\":\"green\"\r\n    ,\"Netherlands\":\"cyan\"\r\n    ,\"Austria\":\"teal\"\r\n    ,\"Belgium\":\"brown\"\r\n    ,\"All Other\":\"lightgray\"\r\n    ,\"India\":\"red\"\r\n    };\r\n\r\n    let marginRight = window.innerWidth*.1325\r\n    if (window.innerWidth > 1000){\r\n      marginRight = window.innerWidth*.05\r\n    }\r\n    else if (window.innerWidth > 800){\r\n      marginRight = window.innerWidth*.09\r\n    }\r\n\r\n    that.margin = {top: window.innerHeight*.01, right: marginRight, bottom: window.innerHeight*.03, left: window.innerWidth*.03};\r\n    const width = this.props.size - that.margin.right;\r\n    const height = width*(2/3);\r\n\r\n    that.svg = select(node)\r\n      .attr(\"id\",\"bump-svg\")\r\n      .attr(\"width\", width + that.margin.left + that.margin.right)\r\n      .attr(\"height\", height + that.margin.top + that.margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + that.margin.left + \",\" + that.margin.top + \")\");\r\n\r\n    // axis\r\n    that.x = scaleTime()\r\n      .domain(extent(loadedData['confirmed_global'], d => timeParse(\"%m/%d/%y\")(d[0].date)))\r\n      .range([0, width])\r\n      .clamp(true);\r\n\r\n    const xAxis = axisBottom()\r\n      .scale(that.x)\r\n      .ticks(timeMonth, 1).tickFormat(timeFormat('%b'));\r\n\r\n    that.svg.append(\"g\")\r\n      .attr(\"class\", \"x-bump axis\")\r\n      .attr(\"transform\", `translate(0,${height-5})`)\r\n      .transition(\"axis\")\r\n      .duration(1000)\r\n      .call(xAxis);\r\n\r\n    const y = scaleLinear()\r\n      .domain([0,1])\r\n      .range([height-10, 0]);\r\n\r\n    const yAxis = axisRight()\r\n      .scale(y)\r\n      .tickFormat(format(\".0%\"));\r\n\r\n    that.svg.append(\"g\")\r\n        .attr(\"class\", \"y-bump axis\")\r\n        .attr(\"transform\", `translate(${width+5}, 0)`)\r\n        .transition(\"axis\")\r\n        .duration(1000)\r\n        .call(yAxis);\r\n\r\n    // clipping paths\r\n    that.svg.append(\"defs\")\r\n      .append(\"clipPath\")\r\n      .attr(\"id\",\"clip-bump\")\r\n      .append(\"rect\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height-10)\r\n      .attr(\"x\",0)\r\n      .attr(\"y\",0);\r\n\r\n    that.bumpArea = area()\r\n      .curve(curveBasis)\r\n      .x(d => that.x(d.formattedDate))\r\n      .y0(d => y(d.y0))\r\n      .y1(d => y(d.y0 + d.y));\r\n\r\n    that.blank = area()\r\n      .curve(curveBasis)\r\n      .x(d => that.x(d.formattedDate))\r\n      .y0(d => height-10)\r\n      .y1(d => height-10);\r\n  }\r\n\r\n  toggleType() {\r\n    this.setState((prevState) => {\r\n      return {showCases:!prevState.showCases}\r\n    });\r\n  }\r\n\r\n  toggleLocation() {\r\n    this.setState((prevState) => {\r\n      return {showGlobal:!prevState.showGlobal}\r\n    });\r\n  }\r\n\r\n  drawData() {\r\n    this.toggleType();\r\n    const layers = prepareData(loadedData,this.state.showCases,this.state.showGlobal);\r\n    var countries = this.state.svg.selectAll(`.areaBumpLayers`)\r\n      .data(layers, d => d.key);\r\n\r\n    countries.transition()\r\n      .duration(1000)\r\n      .attr(\"d\", d => {\r\n        return this.state.bumpArea(d.values);\r\n      });\r\n\r\n    countries.enter()\r\n      .append(\"path\")\r\n      .attr(\"class\", `layer-bump areaBumpLayers`)\r\n      .on(\"mousemove\", d => this.updateBumpTooltip(d))\r\n      .on(\"mouseout\", d => this.state.svg.selectAll(\".bump-tooltip\").style(\"visibility\", \"hidden\"))\r\n      .attr(\"fill\", (d,i) => this.state.colors[d.key] ? this.state.colors[d.key] : hashStringToColor(d.key))\r\n      .attr(\"stroke\",\"black\")\r\n      .attr(\"d\", d => this.state.blank(d.values))\r\n      .transition(\"load\")\r\n      .duration(1000)\r\n      .attr(\"d\", d => {\r\n        return this.state.bumpArea(d.values);\r\n      })\r\n      .attr(\"opacity\", 1);\r\n\r\n    countries.exit()\r\n      .transition()\r\n      .duration(1000)\r\n      .attr(\"d\", d => this.state.blank(d.values))\r\n      .remove();\r\n\r\n    function prepareData(input,casesState,locationState){\r\n      //find a y and y0 for each data point\r\n      var dataSelection = \"\"\r\n      if(casesState) {\r\n        dataSelection = 'confirmed_'\r\n      }\r\n      else {\r\n        dataSelection = 'deaths_'\r\n      }\r\n      if(locationState) {\r\n        dataSelection += 'global'\r\n      }\r\n      else {\r\n        dataSelection += 'US'\r\n      }\r\n      console.log(dataSelection)\r\n      var data = input[dataSelection]\r\n      var total_days = data.length;\r\n      var flat = [];\r\n      for(var i = 0; i < total_days; i++){\r\n        var sum = 0;\r\n        var padding = 0;\r\n        var place = data[i].length;\r\n        while(place--){\r\n          data[i][place][\"formattedDate\"] = timeParse(\"%m/%d/%y\")(data[i][place][\"date\"]);\r\n          data[i][place][\"y0\"] = sum;\r\n          data[i][place][\"y\"] = data[i][place][\"pct\"];\r\n          flat.push(data[i][place]);\r\n          sum += data[i][place][\"pct\"] + padding;\r\n        }\r\n      }\r\n\r\n      var nester = nest()\r\n        .key(d => d.location);\r\n      var layers = nester.entries(flat);\r\n      layers = layers.sort(\r\n          (a,b) => b.values[b.values.length-1].rank - a.values[a.values.length-1].rank\r\n      );\r\n      return layers;\r\n    }\r\n\r\n    function djb2(str){\r\n      var hash = 5381;\r\n      for (var i = 0; i < str.length; i++) {\r\n        hash = ((hash << 5) + hash) + str.charCodeAt(i); /* hash * 33 + c */\r\n      }\r\n      return hash;\r\n    }\r\n\r\n    function hashStringToColor(str) {\r\n      var hash = djb2(str);\r\n      var r = (hash & 0xFF0000) >> 16;\r\n      var g = (hash & 0x00FF00) >> 8;\r\n      var b = hash & 0x0000FF;\r\n      return \"#\" + (\"0\" + r.toString(16)).substr(-2) + (\"0\" + g.toString(16)).substr(-2) + (\"0\" + b.toString(16)).substr(-2);\r\n    }\r\n  }\r\n\r\n  // generates data when mouse on chart\r\n  updateBumpTooltip(d){\r\n    var date = roundDate(this.state.x.invert(this.state.mouseX - this.state.margin.left));\r\n    var val = d.values[d.values.length-1];\r\n    d.values.forEach(el => {\r\n      if(el.formattedDate.getTime() === date.getTime()){\r\n        val = el;\r\n      }\r\n    })\r\n\r\n    var current = format(\",\")(val.count)\r\n    var pct = format(\".0%\")(val.pct)\r\n    var day = val.date\r\n    var n = d.key;\r\n\r\n    const tooltip = this.state.svg.selectAll(\".bump-tooltip\")\r\n      .data([n,`date: ${day}`,`count: ${current}`,`% of daily global: ${pct}`]);\r\n    tooltip.style(\"visibility\", \"visible\")\r\n      .text(d => d);\r\n    tooltip.enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"bump-tooltip\")\r\n      .attr(\"x\",\"10\")\r\n      .attr(\"y\",(d,i) => `${2+i}em`)\r\n      .attr(\"font-weight\", (d,i) => i === 0 ? \"bold\" : \"normal\")\r\n      .text(d => d);\r\n\r\n    function roundDate(timeStamp){\r\n        var d = new Date(timeStamp);\r\n        d.setHours(0);\r\n        d.setMinutes(0);\r\n        d.setSeconds(0);\r\n        d.setMilliseconds(0);\r\n      return d;\r\n    }\r\n  }\r\n\r\n  // updates data as mouse moved across chart\r\n  onMouseMove(e) {\r\n    this.setState({'mouseX':e.nativeEvent.offsetX});\r\n  }\r\n\r\n  render() {\r\n    let buttonTitle = \"View Fatality Data\";\r\n    let chartTitle = \"Share of Global COVID-19 Cases by Country\";\r\n    if (this.state.showCases) {\r\n      buttonTitle = \"View Case Data\";\r\n      chartTitle = \"Share of Global COVID-19 Deaths by Country\"\r\n    }\r\n\r\n    return (\r\n      <div className='align-content-center align-items-center'>\r\n        <div className='horizontal-center'>\r\n          <p className='viz-title' id='chart-title'>{chartTitle}</p>\r\n        </div>\r\n        <div className='horizontal-center'>\r\n          <svg\r\n              onMouseMove={this.onMouseMove}\r\n              ref={node => this.node = node}\r\n              width={this.props.size}\r\n              height={this.props.size}\r\n          />\r\n        </div>\r\n        <div className='horizontal-center'>\r\n          <button\r\n              className='card-button chart-toggle'\r\n              onClick={() => {\r\n                this.drawData();\r\n              }}>\r\n            {buttonTitle}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ProjectVisualizationMaster from \"../ProjectVisualizationMaster\";\r\nimport AreaBump from \"../D3_graphs/AreaBumpGraph\";\r\n\r\nfunction AreaBumpPage(){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"project-detail align-items-center\">\r\n                <ProjectVisualizationMaster\r\n                    style = {{display: 'flex',  justifyContent:'center', alignItems:'center'}}\r\n                    title=\"Area Bump Chart\"\r\n                    next_page=\"map_reduce\"\r\n                    prev_page=\"digit_recog\"\r\n                    tools=\"React & D3.js\"\r\n                    visualizationComponent=<AreaBump size={Math.min(window.innerWidth*.95,window.innerHeight*.95)}/>\r\n                    visualizationNotes=\"\r\n                    <br/>\r\n                    <strong><i>Use button</i> to toggle cases and fatalities. <i>Hover</i> to see country info.</strong>\r\n                    \"\r\n                    description=\r\n                    \"This visualization shows the changing geographic patterns of the COVID-19 pandemic. It\r\n                    plots cumulative cases and fatalities as a share of the global total. The top ten countries\r\n                    are broken out, with the remainder aggregated into the 'All Other' category. The stacking\r\n                    of countries shows their relative counts, with the larger appearing on top.\r\n                    \"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default AreaBumpPage;\r\n","import React, { Component } from 'react'\r\nimport '../../App.css'\r\nimport { extent } from 'd3-array'\r\nimport { axisBottom, axisRight } from 'd3-axis'\r\nimport { nest } from 'd3-collection'\r\nimport { rgb } from 'd3-color'\r\nimport { format } from 'd3-format'\r\nimport { interpolateRgb } from 'd3-interpolate'\r\nimport { scaleLinear, scaleLog, scaleTime } from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport { area, curveCardinal, stack } from 'd3-shape'\r\nimport {timeMonth} from 'd3-time'\r\nimport { timeFormat, timeParse } from 'd3-time-format'\r\nimport loadedData from '../../assets/data/StreamChartData.json'\r\n\r\nclass StreamGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.createStreamGraph = this.createStreamGraph.bind(this);\r\n        this.drawScale = this.drawScale.bind(this);\r\n        this.drawLegend = this.drawLegend.bind(this);\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.updateTooltip = this.updateTooltip.bind(this);\r\n        this.state = {'logScale':true\r\n            ,'margin':null\r\n            ,'width':null\r\n            ,'height':null\r\n            ,'svg':null\r\n            ,'yLog':null\r\n            ,'yLinear':null\r\n            ,'yAxis':null\r\n            ,'xAxis':null\r\n            ,'cs':null\r\n            ,'streamArea':null\r\n            ,'mouseX':0\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.createStreamGraph();\r\n        this.drawScale();\r\n        this.drawLegend();\r\n    }\r\n    componentDidUpdate() {\r\n    }\r\n    createStreamGraph() {\r\n        const node = this.node;\r\n        const that = this.state;\r\n\r\n        const margin = {top: 20, right: 50, bottom: 100, left: 30};\r\n        const width = this.props.size[0] - margin.left - margin.right;\r\n        const height = this.props.size[1] - margin.top - margin.bottom;\r\n        that.margin = margin;\r\n        that.height = height;\r\n        that.width = width;\r\n\r\n        that.svg = select(node)\r\n            .attr('id','stream-svg')\r\n            .attr('width', this.props.size[0])\r\n            .attr('height', this.props.size[1])\r\n            .append('g')\r\n            .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n        that.cs = scaleLinear()\r\n            .domain([0,0.5,1])\r\n            .interpolate(interpolateRgb)\r\n            .range([rgb('#cc0000'),rgb('#f9f7ae'),rgb('#006837')]);\r\n\r\n        const parseTime = timeParse('%m/%d/%y');\r\n        function formatDate (d) {\r\n            d.date = parseTime(d.date);\r\n            d.current_cases = +d.current_cases;\r\n        }\r\n        loadedData.forEach(formatDate);\r\n\r\n        const [layers, singleDayMax] = prepareData(loadedData)\r\n        const yAxisBuffer = singleDayMax.toString().length*6;\r\n        const activeWidth = width - yAxisBuffer;\r\n\r\n        that.x = scaleTime()\r\n            .domain(extent(loadedData, d => d.date))\r\n            .range([0, activeWidth])\r\n            .clamp(true);\r\n\r\n        that.xAxis = axisBottom(that.x)\r\n            .ticks(timeMonth);\r\n\r\n        that.svg.append('g')\r\n            .attr('class', 'x axis')\r\n            .attr('transform', `translate(0,${height})`);\r\n\r\n        that.yLog = scaleLog()\r\n            .range([height-10, 0])\r\n            .domain([singleDayMax/200,singleDayMax])\r\n            .clamp(true);\r\n\r\n        that.yLinear = scaleLinear()\r\n            .range([height-10, 0])\r\n            .domain([0,singleDayMax])\r\n            .clamp(true);\r\n\r\n        that.yAxis = axisRight()\r\n            .tickFormat(format(','));\r\n\r\n        that.svg.append('g')\r\n            .attr('class', 'y axis')\r\n            .attr('transform', `translate(${activeWidth + 10}, 0)`);\r\n\r\n        that.svg.append('defs')\r\n            .append('clipPath')\r\n            .attr('id', 'clip')\r\n            .append('rect')\r\n            .attr('width', activeWidth)\r\n            .attr('height', height-10)\r\n            .attr('x', 0)\r\n            .attr('y', 0);\r\n\r\n        that.streamArea = area()\r\n            .curve(curveCardinal)\r\n            .x(d => that.x(d.data.date));\r\n        const blank = area()\r\n            .curve(curveCardinal)\r\n            .x(d => that.x(d.data.date))\r\n            .y0(that.height-10)\r\n            .y1(that.height-10);\r\n\r\n        const countries = that.svg.selectAll(`.globalData`)\r\n            .data(layers);\r\n\r\n        countries.enter()\r\n            .append('path')\r\n            .attr('class', `layer globalData`)\r\n            .attr('d', d => blank(d))\r\n            .on('mousemove', d => this.updateTooltip(d))\r\n            .on('mouseout', function(d, i) {\r\n                that.svg.selectAll('.stream-tooltip').style('visibility', 'hidden');\r\n            })\r\n            .attr('fill', d => {return `url(#gradient-${d.key.replace(/[^A-Za-z]/g, '')})`})\r\n            .attr('clip-path','url(#clip)')\r\n            .attr('opacity', 1);\r\n\r\n        function prepareData(loadedData){\r\n            const full = nestAndSort(loadedData);\r\n            const short = nestAndSort(loadedData);\r\n\r\n            const l = short.length;\r\n            for(let j = 0; j < l; j++){\r\n                const vals = short[j].values;\r\n                let lv = vals.length;\r\n                const step = Math.round(lv / 40);\r\n                while(lv-step > 0){\r\n                    vals.splice(lv-step,step-1)\r\n                    lv -= step;\r\n                }\r\n            }\r\n\r\n            populateGradients(full);\r\n\r\n            const dailyValues = short.map(country => country.values);\r\n            const zipped = zip(dailyValues);\r\n            const stackKeys = zipped[0].map(country => country.key.replace(/[^A-Za-z]/g, ''));\r\n            let singleDayMax = 0;\r\n\r\n            const recombined = zipped.map(oneDay => {\r\n                const dayDict = {};\r\n                dayDict['date'] = oneDay[0].date;\r\n                let sum = 0;\r\n                oneDay.forEach(country => {\r\n                    sum += country.current_cases;\r\n                    dayDict[country.key.replace(/[^A-Za-z]/g, '')] = country.current_cases;\r\n                })\r\n                singleDayMax = Math.max(singleDayMax, sum);\r\n                return dayDict;\r\n            });\r\n\r\n            const stacker = stack()\r\n                .keys(stackKeys);\r\n            const layers = stacker(recombined);\r\n\r\n            for(let k = 0; k < l; k++){\r\n                layers[k]['d'] = full[k]\r\n            }\r\n\r\n            return [layers, singleDayMax]\r\n        }\r\n        function nestAndSort(data){\r\n            //manipulate data\r\n            const nester = nest()\r\n                .key(d => d.key);\r\n            const alphabetic = nester.entries(data);\r\n            const l = alphabetic.length;\r\n\r\n            //order data\r\n            for(let i = 0; i < l; i++){\r\n                const vals = alphabetic[i].values;\r\n                const lv = vals.length;\r\n                const current = vals[lv - 1];\r\n                alphabetic[i].fatality_rate = current.fatality_rate;\r\n                alphabetic[i].current = current.current_cases;\r\n                alphabetic[i].index = i;\r\n            }\r\n            alphabetic.sort((a,b) => (a.current - b.current));\r\n            return alphabetic;\r\n        }\r\n        function populateGradients(alphabetic){\r\n            //add color gradients\r\n            const l = alphabetic.length;\r\n            for(let i = 0; i < l; i++){\r\n                const id = `gradient-${alphabetic[i].key.replace(/[^A-Za-z]/g, '')}`;\r\n                alphabetic[i].gradient = id;\r\n\r\n                const defs = that.svg.append('defs');\r\n\r\n                const gradient = defs.append('linearGradient')\r\n                    .attr('id', id)\r\n                    .attr('x1', '0%')\r\n                    .attr('x2', '100%')\r\n                    .attr('y1', '0%')\r\n                    .attr('y2', '0%');\r\n\r\n                const values = alphabetic[i].values;\r\n                const lv = alphabetic[i].values.length;\r\n\r\n                for(let j = 0; j < lv; j++){\r\n                    const offset = `${Math.round(j * 100 / (lv - 1))}%`;\r\n                    const fr = values[j].fatality_rate / 0.1;\r\n                    const col = that.cs(1 - fr); //d3.interpolateRdYlGn(1-fr);\r\n\r\n                    gradient.append('stop')\r\n                        .attr('offset', offset)\r\n                        .attr('stop-color', col)\r\n                        .attr('stop-opacity', 1);\r\n                }\r\n            }\r\n        }\r\n        function zip(arrays) {\r\n            return arrays[0].map((_,i) => arrays.map(array => array[i]));\r\n        }\r\n    }\r\n    drawScale(){\r\n        this.setState({'logScale': !this.state.logScale})\r\n        let y = this.state.yLinear;\r\n        if(this.state.logScale) y = this.state.yLog;\r\n        this.state.yAxis.scale(y);\r\n\r\n        this.state.svg.selectAll('.y')\r\n            .transition('axis')\r\n            .duration(1000)\r\n            .call(this.state.yAxis);\r\n\r\n        this.state.svg.selectAll('.x')\r\n            .transition('axis')\r\n            .duration(1000)\r\n            .call(this.state.xAxis);\r\n\r\n        this.state.streamArea.y0(d => y(d[0]+1))\r\n            .y1(d => y(d[1]+1));\r\n\r\n        this.state.svg.selectAll('.layer')\r\n            .transition('axis')\r\n            .duration(1000)\r\n            .attr('d', d => this.state.streamArea(d))\r\n    }\r\n    drawLegend() {\r\n        const defs = this.state.svg.append('defs');\r\n\r\n        const gradient = defs.append('linearGradient')\r\n            .attr('id', 'legend-grad')\r\n            .attr('x1', '0%')\r\n            .attr('x2', '100%')\r\n            .attr('y1', '0%')\r\n            .attr('y2', '0%');\r\n\r\n        for(let i = 0; i <= 10; i++){\r\n            gradient.append('stop')\r\n                .attr('offset', `${i*10}%`)\r\n                .attr('stop-color', this.state.cs(1-i/10)) // d3.interpolateRdYlGn(1-i/10))\r\n                .attr('stop-opacity', 1);\r\n        }\r\n\r\n        const legend = this.state.svg.append('g')\r\n            .attr('id', 'legend')\r\n            .attr('transform', `translate(${(this.state.width / 2) - 150},${this.state.height + 65})`);\r\n        legend.append('rect')\r\n            .attr('width',300)\r\n            .attr('height',15)\r\n            .attr('fill', 'url(#legend-grad)');\r\n        legend.append('text')\r\n            .attr('font-size','16px')\r\n            .attr(\"x\", 75)\r\n            .attr('width',300)\r\n            .text('Case Fatality Rate');\r\n\r\n        const lScale = scaleLinear()\r\n            .range([0, 300])\r\n            .domain([0.0, 0.1]);\r\n\r\n        const lAxis = axisBottom(lScale)\r\n            .tickSize(18, 0)\r\n            .tickFormat(format('.1%'));\r\n\r\n        const l2 = this.state.svg.append('g')\r\n            .attr('class', 'legend-axis axis')\r\n            .attr('transform', `translate(${(this.state.width / 2) - 150},${this.state.height + 65})`)\r\n            .call(lAxis);\r\n\r\n        l2.selectAll('path')\r\n            .remove();\r\n    }\r\n    onMouseMove(e) {\r\n        this.setState({'mouseX':e.nativeEvent.offsetX});\r\n    }\r\n    updateTooltip(country) {\r\n        const date = roundDate(this.state.x.invert(this.state.mouseX - this.state.margin.left));\r\n        let val;\r\n        country.d.values.forEach(el => {\r\n            if(el.date.getTime() === date.getTime()){\r\n                val = el;\r\n            }\r\n        })\r\n\r\n        const current = format(',')(val.current_cases);\r\n        const deaths = format(',')(val.deaths);\r\n        const recoveries = format(',')(val.recovered);\r\n        const fatality_rate = format('.1%')(val.fatality_rate);\r\n        const day = timeFormat('%m/%d/%y')(val.date);\r\n        const n = country.d.key;\r\n\r\n        const tooltip = this.state.svg.selectAll('.stream-tooltip')\r\n            .data([n, day, `current cases: ${current}`, `deaths: ${deaths}`, `recoveries: ${recoveries}`, `CFR: ${fatality_rate}`]);\r\n        tooltip.style('visibility', 'visible')\r\n            .attr('opacity',1)\r\n            .text(d => d);\r\n        tooltip.enter()\r\n            .append('text')\r\n            .attr('class', 'stream-tooltip')\r\n            .attr('x','0')\r\n            .attr('y',(d,i) => `${i}em`)\r\n            .attr('font-weight', (d,i) => i === 0 ? 'bold' : 'normal')\r\n            .attr('opacity',1)\r\n            .text(d => d);\r\n\r\n        function roundDate(timeStamp){\r\n            const d = new Date(timeStamp);\r\n            d.setHours(0);\r\n            d.setMinutes(0);\r\n            d.setSeconds(0);\r\n            d.setMilliseconds(0);\r\n            return d;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{'display':'flex', 'alignContent': 'top center'}}>\r\n                    <button\r\n                        className=\"card-button axis-toggle\"\r\n                        onClick={this.drawScale}>\r\n                        Toggle Y-Axis Scale\r\n                    </button>\r\n                </div>\r\n                <svg\r\n                    onMouseMove={this.onMouseMove}\r\n                    ref={node => this.node = node}\r\n                    width={this.props.size[0]}\r\n                    height={this.props.size[1]}>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StreamGraph;\r\n","import React from \"react\";\r\nimport ProjectVisualizationMaster from \"../ProjectVisualizationMaster\";\r\nimport StreamGraph from \"../D3_graphs/StreamGraph\";\r\n\r\nfunction StreamGraphPage(){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"project-detail align-items-center\">\r\n                <ProjectVisualizationMaster\r\n                    // TODO: Update recovered data\r\n                    title=\"Ordered Stream Graph\"\r\n                    next_page=\"area_bump\"\r\n                    prev_page=\"tv_voronoi\"\r\n                    tools=\"React & D3.js\"\r\n                    tip=\"Toggle between logarithmic and linear y-axis scales, hover over the graph for country and date specific information\"\r\n                    visualizationComponent=<StreamGraph size={[500,500]}/>\r\n                description=\r\n                \"When first confronted with the COVID-19 outbreak, one of my first reactions was to seek out and\r\n                dig into data about the pandemic. Much of this early data was confused and contradictory. However,\r\n                gradually a clearly picture emerged of the scale and scope of COVID-19.\r\n                <br/><br/>\r\n                The accompanying visualization shows the path of COVID-19. The chart plots current cases\r\n                (confirmed but not recovered or deceased) by country. The coloration of each country band\r\n                represents the case fatality rate (CFR). Early in the pandemic testing of rare and often only\r\n                serious cases were tested, resulting in an elevated CFR. As testing became more\r\n                prevalent, the CFR declined.\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default StreamGraphPage;\r\n","import React, { Component } from 'react'\r\nimport '../../App.css'\r\nimport { extent } from 'd3-array'\r\nimport { rgb } from 'd3-color'\r\nimport { Delaunay } from \"d3-delaunay\"\r\nimport { interpolateRgb } from 'd3-interpolate'\r\nimport { scaleLinear} from 'd3-scale'\r\nimport { select } from 'd3-selection'\r\nimport loadedData from '../../assets/data/voronoi.json'\r\n// TODO: switch data load to api call\r\n\r\nexport default class VoronoiGraph extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.createVoronoi = this.createVoronoi.bind(this);\r\n    this.drawVoronoi = this.drawVoronoi.bind(this);\r\n    this.updateTooltip = this.updateTooltip.bind(this);\r\n    this.state = {'svg':null\r\n      ,'g':null\r\n      ,'voronoi':null\r\n      ,'pts':null\r\n      ,'genreColor':null\r\n      ,'corrColor':null\r\n      ,'colorToggle':true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.createVoronoi();\r\n    this.drawVoronoi();\r\n  }\r\n  createVoronoi() {\r\n    const that = this;\r\n    const node = this.node;\r\n\r\n    const margin = {top: Math.max(window.innerHeight*.03,50), right: window.innerWidth*.03, bottom: window.innerHeight*.03, left: window.innerWidth*.03};\r\n    const sideDimension = this.props.size - margin.top;\r\n\r\n    that.state.genreColor = loadedData.map(d => d.color);\r\n    that.state.pts = loadedData.map(d => [d.tsneCoordinatesNormalized[0]*sideDimension,d.tsneCoordinatesNormalized[1]*sideDimension]);\r\n    const xv = extent(that.state.pts.map(d => d[0]));\r\n    const yv = extent(that.state.pts.map(d => d[1]));\r\n    console.log(xv);\r\n\r\n    const delaunay = Delaunay.from(that.state.pts);\r\n    that.state.voronoi = delaunay.voronoi([xv[0],yv[0],xv[1],yv[1]]);\r\n\r\n    that.state.svg = select(node)\r\n         .attr(\"id\",\"voronoi-svg\")\r\n         .attr(\"width\", sideDimension)\r\n         .attr(\"height\", this.props.size)\r\n         .append(\"g\")\r\n         .attr(\"transform\", `translate(0,${margin.top})`);\r\n\r\n    that.state.g = that.state.svg.append(\"g\")\r\n        .attr(\"id\",\"voronoi-group\");\r\n\r\n    that.state.svg.append(\"path\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"d\", that.state.voronoi.renderBounds());\r\n\r\n    that.state.svg.append(\"path\")\r\n        .attr(\"d\", delaunay.renderPoints(null, 1.5));\r\n  }\r\n  drawVoronoi(){\r\n    const that = this;\r\n    let color = this.state.genreColor;\r\n    if(!this.state.colorToggle) color = this.state.corrColor;\r\n\r\n    const cs = scaleLinear()\r\n       .domain([0,0.25,0.5])\r\n       .interpolate(interpolateRgb)\r\n       .range([rgb('#cc0000'),rgb(249, 247, 174),rgb(0, 104, 55)])\r\n       .clamp(true);\r\n\r\n    this.state.g.selectAll(\"path\")\r\n      .data(this.state.pts)\r\n      .join(\"path\")\r\n      .attr(\"d\", (d, i) => this.state.voronoi.renderCell(i))\r\n      .attr(\"stroke-width\",3)\r\n      .on(\"mouseover\", function(d, i){\r\n        if(that.state.colorToggle){\r\n          select(this)\r\n            .attr(\"fill\",\"lightgray\");\r\n        }else{\r\n          that.state.corrColor = loadedData[i].similarityMatrix.map(c => cs(c));\r\n          that.drawVoronoi();\r\n        }\r\n        that.updateTooltip(loadedData[i]);\r\n      })\r\n      .on(\"mouseout\", function(d,i){\r\n        if(that.state.colorToggle){\r\n          select(this)\r\n            .attr(\"fill\",that.state.genreColor[i]);\r\n          that.state.svg.selectAll(\".voronoi-tooltip\")\r\n            .style(\"visibility\", \"hidden\")\r\n        }\r\n      })\r\n      .on(\"click\", function(d,i){\r\n        that.state.corrColor = loadedData[i].similarityMatrix.map(c => cs(c));\r\n        that.state.colorToggle = !that.state.colorToggle;\r\n        that.drawVoronoi();\r\n      })\r\n      .transition()\r\n      .duration(100)\r\n      .attr(\"fill\", (d, i) => color[i]);\r\n  }\r\n\r\n  updateTooltip(d){\r\n    const tooltip = this.state.svg.selectAll(\".voronoi-tooltip\")\r\n        .data([`${d.label}`, `${d.genres}`]);\r\n    tooltip.style(\"visibility\", \"visible\")\r\n        .attr(\"opacity\",1)\r\n        .text(d => d);\r\n    tooltip.enter()\r\n        .append(\"text\")\r\n        .attr(\"class\", \"voronoi-tooltip\")\r\n        .attr(\"x\",\"0\")\r\n        .attr(\"y\",(d,i) => `${i-2}em`)\r\n        .attr(\"opacity\",1)\r\n        .text(d => d);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='align-items-center'>\r\n        <svg ref={node => this.node = node}>\r\n        </svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ProjectVisualizationMaster from \"../ProjectVisualizationMaster\";\r\nimport VoronoiGraph from \"../D3_graphs/VoronoiGraph\";\r\n\r\nfunction TVVoronoiPage(){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"project-detail align-items-center\">\r\n                <ProjectVisualizationMaster\r\n                    title=\"VoronoiGraph Diagram\"\r\n                    next_page=\"/facial_recog\"\r\n                    prev_page=\"/forest_image\"\r\n                    tools=\"React & D3.js\"\r\n                    visualizationComponent=<VoronoiGraph size={Math.min(window.innerWidth * 0.8,window.innerHeight * 0.6)}/>\r\n                    visualizationNotes=\"\r\n                    <br/>\r\n                    <strong><i>Click on chart</i> to toggle between genres and correlations. <i>Hover</i> to see show title and genre.</strong>\r\n                    \"\r\n                    description=\r\n                    \"This graphic is part of a project I did on the preferences of television viewers. Utilizing over five\r\n                    million viewer data points, I developed two recommendation engines: one based on viewer similarity;\r\n                    the other based on show similarity. While performing this analysis, I wanted to create a visualization\r\n                    to clearly convey the relationships in the high dimensional show-show correlation matrix. I used\r\n                    dimensionality reduction to translate the n-dimensional correlation matrix into a 2D representation.\r\n                    To achieve this I used <a href='https://colah.github.io/posts/2014-10-Visualizing-MNIST/' target='_blank' rel='noopener noreferrer'>\r\n                    t-SNE </a>.\r\n                    <br/><br/>\r\n                    In the visualization, television shows are represented as dots, and their proximities\r\n                    indicate similarity of user preference. However dimensionality reduction is imperfect and results in information loss.\r\n                    The coloration is a VoronoiGraph diagram which shows the correlations between shows. Shows which are greener have more\r\n                    similar user preference. Interestingly, this coloration allows us to see where dimensionality reduction has maintained\r\n                    relative relations and where it has disrupted these.\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default TVVoronoiPage;\r\n","import React, { Component } from 'react';\r\nimport { Card, Grid, makeStyles } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fas,faChevronUp,faChevronLeft,faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { far } from '@fortawesome/free-regular-svg-icons'\r\nimport { fab,faLinkedin,faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport {Link} from \"react-router-dom\";\r\nimport AOS from \"aos\";\r\nlibrary.add(fab, fas, far, faLinkedin, faGithub,faChevronUp,faChevronLeft,faChevronRight)\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         maxWidth: 345,\r\n//     },\r\n//     media: {\r\n//         height: 40,\r\n//     },\r\n// });\r\n\r\nexport default class ProjectDescriptionMaster extends Component {\r\n    render() {\r\n        let html_frame = <div/>;\r\n        if (this.props.html_location !== \"None\") {\r\n            html_frame =\r\n                <div className=\"row project-detail\">\r\n                    <iframe\r\n                        title={this.props.title}\r\n                        src={this.props.html_location}\r\n                        width=\"100%\"\r\n                        height=\"600px\"\r\n                    />\r\n                </div>\r\n        }\r\n\r\n\r\n        return(\r\n            <div className='project-description'>\r\n                <Card shadow={5} style={{width: '100%', margin: 'auto'}} data-aos=\"zoom-in\">\r\n                {/*<Card className={useStyles.root} shadow={5} style={{width: '100%', margin: 'auto'}} data-aos=\"zoom-in\">*/}\r\n                    <div>\r\n                        <Link to={this.props.next_page}>\r\n                            <button className=\"mdc-icon-button keyboard_arrow_up card-button\">\r\n                                <FontAwesomeIcon icon={faChevronRight}/>\r\n                            </button>\r\n                        </Link>\r\n\r\n                        <Link to={{pathname: '/projects'}}>\r\n                            <button className=\"mdc-icon-button keyboard_arrow_up card-button\">\r\n                                <FontAwesomeIcon icon={faChevronUp}/>\r\n                            </button>\r\n                        </Link>\r\n\r\n                        <Link to={this.props.prev_page}>\r\n                            <button className=\"mdc-icon-button keyboard_arrow_up card-button\">\r\n                                <FontAwesomeIcon icon={faChevronLeft}/>\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                    <Grid item xs style={{'margin':'25px'}}>\r\n                        <h2>\r\n                            {this.props.title}\r\n                        </h2>\r\n                        <b>\r\n                            Created with {this.props.tools}\r\n                        </b>\r\n                        <div>\r\n                            <p dangerouslySetInnerHTML={{__html: this.props.description}} />\r\n                        </div>\r\n                        {html_frame}\r\n                    </Grid>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nAOS.init({\r\n    duration: 600\r\n});\r\n","import React from \"react\";\r\nimport ProjectDescriptionMaster from \"../ProjectDescriptionMaster\";\r\n\r\nfunction FacialRecogPage(){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"project-detail align-items-center\">\r\n                <ProjectDescriptionMaster\r\n                    title=\"Facial Recognition\"\r\n                    next_page=\"digit_recog\"\r\n                    prev_page=\"tv_voronoi\"\r\n                    tools=\"Python, Numpy, Scikit-learn, SciPy, & Matplotlib\"\r\n                    html_location=\"/facial_recog.html\"\r\n                    description=\"\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default FacialRecogPage;\r\n","import React from \"react\";\r\nimport ProjectDescriptionMaster from \"../ProjectDescriptionMaster\";\r\nimport Gist from \"react-gist\";\r\n\r\nfunction MapReducePage(){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"project-detail align-items-center\">\r\n                <ProjectDescriptionMaster\r\n                    title=\"MapReduce\"\r\n                    next_page=\"recommendation_engine\"\r\n                    prev_page=\"area_bump\"\r\n                    tools=\"C/C++\"\r\n                    html_location=\"None\"\r\n                    description=\"\r\nMapReduce provides include scalability and fault-tolerance when processing large data sets. The general program includes a map task, which filters and sorts input data, and a reduce task, which performs a summary operation. The tasks can be divided among multiple worker nodes and executed in parallel. A master node orchestrates the communications and data transfers between the various nodes.\r\n<br/><br/>\r\n<h6>MapReduce for Word Count:</h6>\r\nFor the purpose of solving a word count problem, my MapReduce implementation contains the following stages:\r\n<ol>\r\n<li>Map: Worker nodes process input files and produce intermediate files with key-value pairs.</li>\r\n<li>Reduce: Worker nodes aggregate key-value pairs from the map stage and save the aggregated results as reduced intermediate files.</li>\r\n<li>Merge: The master node combines reduced intermediate output files from all reducers into a single consolidated output file.</li>\r\n</ol>\r\n\r\nFor my implementation of MapReduce, each input file is processed by a separate worker node executing a mapper task. The mapper task generates <key, count> pairs and assigns pairs between as many intermediate files as there are reducers. Hashing the keys using the C++ hash function allows pairs with matching keys to be assigned to the same intermediate file. Once all intermediate files are generated, the master node assigns these to workers. The workers execute the reducer task on corresponding intermediate files. These generate new <key, count> pairs representing the number of instances of each keyword. Finally, the master node consolidates reducer output into a single sorted combined output file.\r\n<br/><br/>\r\n<h6>Master-Worker Communication:</h6>\r\nMaster-worker communication is handled by sending messages over sockets between the master node and worker nodes. The messages allow the master node to tell worker nodes when to start map and reduce tasks. The messages also allow worker nodes to communicate their statuses (ready or task completed) to the master node.\r\n<br/><br/>\r\n<h6>Task Scheduling:</h6>\r\nTask scheduling is executed on a “first come, first served” basis. The master node initially directs worker nodes to execute the map task. As input files are mapped, the master node will direct freed worker nodes to any remaining unprocessed input files. The master node waits until all inputs have been processed before directing worker nodes to execute the reduce task. The master node again waits until all intermediate files are processed before executing the merge task and combining the reduced files into a single output file.\r\n\"\r\n                />\r\n                <Gist id='2b4713dd4efb9f7b416c21fe01a43fc0' />\r\n                <Gist id='9266e85a2d7204e855be4da8d0ea59b4' />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default MapReducePage;\r\n","import React from \"react\";\r\nimport ProjectDescriptionMaster from \"../ProjectDescriptionMaster\";\r\n\r\nfunction DigitRecogPage(){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"project-detail align-items-center\">\r\n                <ProjectDescriptionMaster\r\n                    // style = {{display: 'flex',  justifyContent:'center', alignItems:'center'}}\r\n                    title=\"Digit Recognizer\"\r\n                    next_page=\"area_bump\"\r\n                    prev_page=\"facial_recog\"\r\n                    tools=\"Python, Pandas, Matplotlib, Numpy, & Scikit-learn\"\r\n                    html_location=\"/digit_recognizer.html\"\r\n                    description=\"\"\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default DigitRecogPage;\r\n","import React from \"react\";\r\nimport ProjectDescriptionMaster from \"../ProjectDescriptionMaster\";\r\n\r\nfunction ForestImagePage(){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"project-detail align-items-center\">\r\n                <ProjectDescriptionMaster\r\n                    // style = {{display: 'flex',  justifyContent:'center', alignItems:'center'}}\r\n                    title=\"Random forests for image approximation\"\r\n                    next_page=\"tv_voronoi\"\r\n                    prev_page=\"recommendation_engine\"\r\n                    tools=\"Python, Pandas, Matplotlib, Numpy, & Scikit-learn\"\r\n                    html_location=\"/forest_image.html\"\r\n                    description=\r\n                        \"Description: In this problem, we used random forest regression to approximate an image by learning a function that takes image (x, y) coordinates as input and outputs pixel brightness. This way, the function learns to approximate areas of the image that it has not seen before.\r\nTasks:\r\n    To build your 'training set' uniformly sample 5,000 random (x, y) coordinate locations.\r\n    To build the final image, for each pixel of the output, feed the pixel coordinate through the random forest and color the resulting pixel with the output prediction.\r\n    Repeat the experiment for a random forest containing a single decision tree, but with depths 1, 2, 3, 5, 10, and 15.\r\n    Repeat the experiment for a random forest of depth 7, but with number of trees equal to 1, 3, 5, 10, and 100.\r\n    Experiment with different pruning strategies of your choice.\r\n\"\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ForestImagePage;\r\n","import React from \"react\";\r\nimport ProjectDescriptionMaster from \"../ProjectDescriptionMaster\";\r\n\r\nfunction RecommendEnginePage(){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"project-detail align-items-center\">\r\n                <ProjectDescriptionMaster\r\n                    // style = {{display: 'flex',  justifyContent:'center', alignItems:'center'}}\r\n                    title=\"Recommendation Engine\"\r\n                    next_page=\"trip_origin\"\r\n                    prev_page=\"map_reduce\"\r\n                    tools=\"Python, Pandas, Matplotlib, Numpy, SciPy, & Scikit-learn\"\r\n                    html_location=\"/recommendation_engine.html\"\r\n                    description=\"\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default RecommendEnginePage;\r\n","import React from \"react\";\r\nimport ProjectDescriptionMaster from \"../ProjectDescriptionMaster\";\r\n\r\nfunction TripOrigin(){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"project-detail align-items-center\">\r\n                <ProjectDescriptionMaster\r\n                    // style = {{display: 'flex',  justifyContent:'center', alignItems:'center'}}\r\n                    title=\"Geodata Analysis: Calculating Trip Counts\"\r\n                    next_page=\"forest_image\"\r\n                    prev_page=\"recommendation_engine\"\r\n                    tools=\"Python, Pandas, & Geopandas\"\r\n                    html_location=\"/trip_origin.html\"\r\n                    description=\"\"\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default TripOrigin;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AOS from '../../node_modules/aos/dist/aos';\r\n\r\nfunction ContactPage(){\r\n    return(\r\n        <div className=\"vertical-center\">\r\n            <div className=\"container\">\r\n                <div className=\"main_title text-left\">\r\n                    <p className=\"top_text\">Contact me <span></span></p>\r\n                    <h3>Reach out if you have any questions or feedback</h3>\r\n                </div>\r\n\r\n                <Form action='https://formspree.io/f/mvovblzv' method=\"POST\">\r\n\r\n                    <Form.Group controlId=\"formBasicName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" name='name' placeholder=\"Who are you?\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"_replyto\" placeholder=\"email@email.com\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicText\">\r\n                        <Form.Label>Message</Form.Label>\r\n                        <Form.Control input as=\"textarea\" name=\"message\" placeholder=\"Hi!\" required />\r\n                    </Form.Group>\r\n\r\n                    <Button colored className=\"card-button\" variant=\"outline-success\" type=\"submit\">\r\n                        Send\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default ContactPage;\r\nAOS.init({\r\n    duration: 600\r\n});\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport HomePage from \"./HomePage\";\r\nimport AboutPage from \"./AboutPage\";\r\nimport ProjectsPage from \"./ProjectsPage\";\r\nimport AreaBumpPage from \"./project_pages/CovidAreaBumpPage\";\r\nimport StreamGraphPage from \"./project_pages/CovidStreamPage\";\r\nimport TVVoronoiPage from \"./project_pages/TVVoronoiPage\";\r\nimport FacialRecogPage from \"./project_pages/FacialRecognitionPage\";\r\nimport MapReducePage from \"./project_pages/MapReducePage\";\r\nimport DigitRecogPage from \"./project_pages/DigitRecognizerPage\";\r\nimport ForestImagePage from \"./project_pages/ForestImagePage\";\r\nimport RecommendEnginePage from \"./project_pages/RecommendEnginePage\";\r\nimport TripOriginPage from \"./project_pages/TripOriginPage\";\r\nimport ContactPage from \"./ContactPage\";\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path='/'>\r\n                    <HomePage />\r\n                </Route>\r\n                <Route path='/about'>\r\n                    <AboutPage />\r\n                </Route>\r\n                <Route path='/projects'>\r\n                    <ProjectsPage />\r\n                </Route>\r\n                <Route path='/area_bump'>\r\n                    <AreaBumpPage />\r\n                </Route>\r\n                <Route path='/stream_graph'>\r\n                    <StreamGraphPage />\r\n                </Route>\r\n                <Route path='/tv_voronoi'>\r\n                    <TVVoronoiPage />\r\n                </Route>\r\n                <Route path='/facial_recog'>\r\n                    <FacialRecogPage />\r\n                </Route>\r\n                <Route path='/map_reduce'>\r\n                    <MapReducePage />\r\n                </Route>\r\n                <Route path='/digit_recog'>\r\n                    <DigitRecogPage />\r\n                </Route>\r\n                <Route path='/forest_image'>\r\n                    <ForestImagePage />\r\n                </Route>\r\n                <Route path='/trip_origin'>\r\n                    <TripOriginPage />\r\n                </Route>\r\n                <Route path='/recommendation_engine'>\r\n                    <RecommendEnginePage />\r\n                </Route>\r\n                <Route path='/contact'>\r\n                    <ContactPage />\r\n                </Route>\r\n                <Route path='/coloration' component={() => {\r\n                    window.open('http://tom-shanahan.github.io/coloration','_blank');\r\n                    return <Redirect to='/projects' />;\r\n                }}/>\r\n                <Route path='/chrome_extension' component={() => {\r\n                    window.open('https://chrome.google.com/webstore/detail/multi-inbox-checker/ogogkkmiieflnmchmndkknkjpgipldni?hl=en','_blank');\r\n                    return <Redirect to='/projects' />;\r\n                }}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Nav, Navbar} from 'react-bootstrap';\r\nimport {faBars, faWindowClose} from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../css/header.css';\r\nimport '../App.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Header(){\r\n    return (\r\n        // <Navbar expand=\"lg\">\r\n        //     <Navbar.Toggle>\r\n        //         <FontAwesomeIcon icon={faBars}/>\r\n        //     </Navbar.Toggle>\r\n        //     {/*TODO: change toggle icon when clicked*/}\r\n        //     <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        //         <Nav className=\"ml-auto mr-5 mt-2 mb-2\">\r\n        //             <Link className='nav-item nav-link hoverable' to='/'>Home</Link>\r\n        //             <Link className='nav-item nav-link hoverable' to='/about'>About</Link>\r\n        //             <Link className='nav-item nav-link hoverable' to='/projects'>Projects</Link>\r\n        //             <Link className='nav-item nav-link hoverable' to='/contact'>Contact</Link>\r\n        //         </Nav>\r\n        //         <Navbar.Toggle className=\"mt-0 mb-3\">\r\n        //             <FontAwesomeIcon icon={faWindowClose}/>\r\n        //         </Navbar.Toggle>\r\n        //     </Navbar.Collapse>\r\n        // </Navbar>\r\n\r\n        // <nav className=\"navbar fixed-top navbar-expand-md\">\r\n        <Navbar expand=\"lg\">\r\n            {/*<button className=\"navbar-toggler collapsed position-relative\" type=\"button\" data-toggle=\"collapse\"*/}\r\n            {/*        data-target=\"#collapsingNavbar\">*/}\r\n            {/*    <span/>*/}\r\n            {/*    <span/>*/}\r\n            {/*    <span/>*/}\r\n            {/*</button>*/}\r\n            <Navbar.Toggle className=\"navbar-toggler position-relative\">\r\n                <span/>\r\n                <span/>\r\n                <span/>\r\n            </Navbar.Toggle>\r\n            {/*<div className=\"collapse navbar-collapse\" id=\"collapsingNavbar\">*/}\r\n            {/*    <ul className=\"nav navbar-nav\">*/}\r\n            {/*        <li className=\"nav-item\">*/}\r\n            {/*            <a className=\"nav-link\" href=\"#\">About</a>*/}\r\n            {/*        </li>*/}\r\n            {/*    </ul>*/}\r\n            {/*</div>*/}\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto mr-5 mt-2 mb-2\">\r\n                    <Link className='nav-item nav-link hoverable' to='/'>Home</Link>\r\n                    <Link className='nav-item nav-link hoverable' to='/about'>About</Link>\r\n                    <Link className='nav-item nav-link hoverable' to='/projects'>Projects</Link>\r\n                    <Link className='nav-item nav-link hoverable' to='/contact'>Contact</Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        {/*</nav>*/}\r\n        </Navbar>\r\n    );\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport Footer from './components/Footer';\r\nimport ScrollToTop from './components/ScrollToTop';\r\nimport Navigation from \"./components/Navigation\";\r\nimport Header from \"./components/Header\";\r\n\r\nclass App extends React.Component {\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <ScrollToTop>\r\n                    <Header />\r\n                    <Navigation />\r\n                    <Footer />\r\n                </ScrollToTop>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}